
target_011_svc_number.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001150  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000038  080012f0  080012f0  000112f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001328  08001328  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08001328  08001328  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001328  08001328  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001328  08001328  00011328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800132c  0800132c  0001132c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08001330  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  0800138c  0002005c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  0800138c  000201c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000939  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000325  00000000  00000000  00020a08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000120  00000000  00000000  00020d30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000c4  00000000  00000000  00020e50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002b4f  00000000  00000000  00020f14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001441  00000000  00000000  00023a63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000097a5  00000000  00000000  00024ea4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000b20  00000000  00000000  0002e64c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0002f16c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080012d8 	.word	0x080012d8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	080012d8 	.word	0x080012d8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
 * 4. Increment the SVC number by 4 and return it to the thread mode.
 *
 */

int main(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	__asm volatile ("SVC #0x05");
 8000284:	df05      	svc	5

	/* Loop forever */
	for (;;)
 8000286:	e7fe      	b.n	8000286 <main+0x6>

08000288 <SVC_Handler>:
		;
}

void SVC_Handler(unsigned number)
{
 8000288:	b580      	push	{r7, lr}
 800028a:	b082      	sub	sp, #8
 800028c:	af00      	add	r7, sp, #0
 800028e:	6078      	str	r0, [r7, #4]
	printf("%u\n", number);
 8000290:	6879      	ldr	r1, [r7, #4]
 8000292:	4803      	ldr	r0, [pc, #12]	; (80002a0 <SVC_Handler+0x18>)
 8000294:	f000 f9ac 	bl	80005f0 <iprintf>
}
 8000298:	bf00      	nop
 800029a:	3708      	adds	r7, #8
 800029c:	46bd      	mov	sp, r7
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	080012f0 	.word	0x080012f0

080002a4 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	4603      	mov	r3, r0
 80002ac:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002ae:	4b0f      	ldr	r3, [pc, #60]	; (80002ec <ITM_SendChar+0x48>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	4a0e      	ldr	r2, [pc, #56]	; (80002ec <ITM_SendChar+0x48>)
 80002b4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002b8:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002ba:	4b0d      	ldr	r3, [pc, #52]	; (80002f0 <ITM_SendChar+0x4c>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	4a0c      	ldr	r2, [pc, #48]	; (80002f0 <ITM_SendChar+0x4c>)
 80002c0:	f043 0301 	orr.w	r3, r3, #1
 80002c4:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002c6:	bf00      	nop
 80002c8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f003 0301 	and.w	r3, r3, #1
 80002d2:	2b00      	cmp	r3, #0
 80002d4:	d0f8      	beq.n	80002c8 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80002d6:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80002da:	79fb      	ldrb	r3, [r7, #7]
 80002dc:	6013      	str	r3, [r2, #0]
}
 80002de:	bf00      	nop
 80002e0:	370c      	adds	r7, #12
 80002e2:	46bd      	mov	sp, r7
 80002e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e8:	4770      	bx	lr
 80002ea:	bf00      	nop
 80002ec:	e000edfc 	.word	0xe000edfc
 80002f0:	e0000e00 	.word	0xe0000e00

080002f4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b086      	sub	sp, #24
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	60f8      	str	r0, [r7, #12]
 80002fc:	60b9      	str	r1, [r7, #8]
 80002fe:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000300:	2300      	movs	r3, #0
 8000302:	617b      	str	r3, [r7, #20]
 8000304:	e00a      	b.n	800031c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000306:	f3af 8000 	nop.w
 800030a:	4601      	mov	r1, r0
 800030c:	68bb      	ldr	r3, [r7, #8]
 800030e:	1c5a      	adds	r2, r3, #1
 8000310:	60ba      	str	r2, [r7, #8]
 8000312:	b2ca      	uxtb	r2, r1
 8000314:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000316:	697b      	ldr	r3, [r7, #20]
 8000318:	3301      	adds	r3, #1
 800031a:	617b      	str	r3, [r7, #20]
 800031c:	697a      	ldr	r2, [r7, #20]
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	429a      	cmp	r2, r3
 8000322:	dbf0      	blt.n	8000306 <_read+0x12>
  }

  return len;
 8000324:	687b      	ldr	r3, [r7, #4]
}
 8000326:	4618      	mov	r0, r3
 8000328:	3718      	adds	r7, #24
 800032a:	46bd      	mov	sp, r7
 800032c:	bd80      	pop	{r7, pc}

0800032e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800032e:	b580      	push	{r7, lr}
 8000330:	b086      	sub	sp, #24
 8000332:	af00      	add	r7, sp, #0
 8000334:	60f8      	str	r0, [r7, #12]
 8000336:	60b9      	str	r1, [r7, #8]
 8000338:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033a:	2300      	movs	r3, #0
 800033c:	617b      	str	r3, [r7, #20]
 800033e:	e009      	b.n	8000354 <_write+0x26>
  {
	  ITM_SendChar(*ptr++);
 8000340:	68bb      	ldr	r3, [r7, #8]
 8000342:	1c5a      	adds	r2, r3, #1
 8000344:	60ba      	str	r2, [r7, #8]
 8000346:	781b      	ldrb	r3, [r3, #0]
 8000348:	4618      	mov	r0, r3
 800034a:	f7ff ffab 	bl	80002a4 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034e:	697b      	ldr	r3, [r7, #20]
 8000350:	3301      	adds	r3, #1
 8000352:	617b      	str	r3, [r7, #20]
 8000354:	697a      	ldr	r2, [r7, #20]
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	429a      	cmp	r2, r3
 800035a:	dbf1      	blt.n	8000340 <_write+0x12>
//    __io_putchar(*ptr++);
  }
  return len;
 800035c:	687b      	ldr	r3, [r7, #4]
}
 800035e:	4618      	mov	r0, r3
 8000360:	3718      	adds	r7, #24
 8000362:	46bd      	mov	sp, r7
 8000364:	bd80      	pop	{r7, pc}

08000366 <_close>:

int _close(int file)
{
 8000366:	b480      	push	{r7}
 8000368:	b083      	sub	sp, #12
 800036a:	af00      	add	r7, sp, #0
 800036c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800036e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000372:	4618      	mov	r0, r3
 8000374:	370c      	adds	r7, #12
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr

0800037e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800037e:	b480      	push	{r7}
 8000380:	b083      	sub	sp, #12
 8000382:	af00      	add	r7, sp, #0
 8000384:	6078      	str	r0, [r7, #4]
 8000386:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000388:	683b      	ldr	r3, [r7, #0]
 800038a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800038e:	605a      	str	r2, [r3, #4]
  return 0;
 8000390:	2300      	movs	r3, #0
}
 8000392:	4618      	mov	r0, r3
 8000394:	370c      	adds	r7, #12
 8000396:	46bd      	mov	sp, r7
 8000398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800039c:	4770      	bx	lr

0800039e <_isatty>:

int _isatty(int file)
{
 800039e:	b480      	push	{r7}
 80003a0:	b083      	sub	sp, #12
 80003a2:	af00      	add	r7, sp, #0
 80003a4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003a6:	2301      	movs	r3, #1
}
 80003a8:	4618      	mov	r0, r3
 80003aa:	370c      	adds	r7, #12
 80003ac:	46bd      	mov	sp, r7
 80003ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b2:	4770      	bx	lr

080003b4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b085      	sub	sp, #20
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	60f8      	str	r0, [r7, #12]
 80003bc:	60b9      	str	r1, [r7, #8]
 80003be:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003c0:	2300      	movs	r3, #0
}
 80003c2:	4618      	mov	r0, r3
 80003c4:	3714      	adds	r7, #20
 80003c6:	46bd      	mov	sp, r7
 80003c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003cc:	4770      	bx	lr
	...

080003d0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003d0:	b580      	push	{r7, lr}
 80003d2:	b086      	sub	sp, #24
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d8:	4a14      	ldr	r2, [pc, #80]	; (800042c <_sbrk+0x5c>)
 80003da:	4b15      	ldr	r3, [pc, #84]	; (8000430 <_sbrk+0x60>)
 80003dc:	1ad3      	subs	r3, r2, r3
 80003de:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003e0:	697b      	ldr	r3, [r7, #20]
 80003e2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003e4:	4b13      	ldr	r3, [pc, #76]	; (8000434 <_sbrk+0x64>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	2b00      	cmp	r3, #0
 80003ea:	d102      	bne.n	80003f2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003ec:	4b11      	ldr	r3, [pc, #68]	; (8000434 <_sbrk+0x64>)
 80003ee:	4a12      	ldr	r2, [pc, #72]	; (8000438 <_sbrk+0x68>)
 80003f0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003f2:	4b10      	ldr	r3, [pc, #64]	; (8000434 <_sbrk+0x64>)
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	4413      	add	r3, r2
 80003fa:	693a      	ldr	r2, [r7, #16]
 80003fc:	429a      	cmp	r2, r3
 80003fe:	d207      	bcs.n	8000410 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000400:	f000 f99a 	bl	8000738 <__errno>
 8000404:	4603      	mov	r3, r0
 8000406:	220c      	movs	r2, #12
 8000408:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800040a:	f04f 33ff 	mov.w	r3, #4294967295
 800040e:	e009      	b.n	8000424 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000410:	4b08      	ldr	r3, [pc, #32]	; (8000434 <_sbrk+0x64>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000416:	4b07      	ldr	r3, [pc, #28]	; (8000434 <_sbrk+0x64>)
 8000418:	681a      	ldr	r2, [r3, #0]
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	4413      	add	r3, r2
 800041e:	4a05      	ldr	r2, [pc, #20]	; (8000434 <_sbrk+0x64>)
 8000420:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000422:	68fb      	ldr	r3, [r7, #12]
}
 8000424:	4618      	mov	r0, r3
 8000426:	3718      	adds	r7, #24
 8000428:	46bd      	mov	sp, r7
 800042a:	bd80      	pop	{r7, pc}
 800042c:	20020000 	.word	0x20020000
 8000430:	00000400 	.word	0x00000400
 8000434:	20000078 	.word	0x20000078
 8000438:	200001c8 	.word	0x200001c8

0800043c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800043c:	480d      	ldr	r0, [pc, #52]	; (8000474 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800043e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000440:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000444:	480c      	ldr	r0, [pc, #48]	; (8000478 <LoopForever+0x6>)
  ldr r1, =_edata
 8000446:	490d      	ldr	r1, [pc, #52]	; (800047c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000448:	4a0d      	ldr	r2, [pc, #52]	; (8000480 <LoopForever+0xe>)
  movs r3, #0
 800044a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800044c:	e002      	b.n	8000454 <LoopCopyDataInit>

0800044e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800044e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000450:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000452:	3304      	adds	r3, #4

08000454 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000454:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000456:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000458:	d3f9      	bcc.n	800044e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800045a:	4a0a      	ldr	r2, [pc, #40]	; (8000484 <LoopForever+0x12>)
  ldr r4, =_ebss
 800045c:	4c0a      	ldr	r4, [pc, #40]	; (8000488 <LoopForever+0x16>)
  movs r3, #0
 800045e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000460:	e001      	b.n	8000466 <LoopFillZerobss>

08000462 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000462:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000464:	3204      	adds	r2, #4

08000466 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000466:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000468:	d3fb      	bcc.n	8000462 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800046a:	f000 f96b 	bl	8000744 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800046e:	f7ff ff07 	bl	8000280 <main>

08000472 <LoopForever>:

LoopForever:
  b LoopForever
 8000472:	e7fe      	b.n	8000472 <LoopForever>
  ldr   r0, =_estack
 8000474:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000478:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800047c:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 8000480:	08001330 	.word	0x08001330
  ldr r2, =_sbss
 8000484:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000488:	200001c8 	.word	0x200001c8

0800048c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800048c:	e7fe      	b.n	800048c <ADC_IRQHandler>
	...

08000490 <std>:
 8000490:	2300      	movs	r3, #0
 8000492:	b510      	push	{r4, lr}
 8000494:	4604      	mov	r4, r0
 8000496:	e9c0 3300 	strd	r3, r3, [r0]
 800049a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800049e:	6083      	str	r3, [r0, #8]
 80004a0:	8181      	strh	r1, [r0, #12]
 80004a2:	6643      	str	r3, [r0, #100]	; 0x64
 80004a4:	81c2      	strh	r2, [r0, #14]
 80004a6:	6183      	str	r3, [r0, #24]
 80004a8:	4619      	mov	r1, r3
 80004aa:	2208      	movs	r2, #8
 80004ac:	305c      	adds	r0, #92	; 0x5c
 80004ae:	f000 f8f4 	bl	800069a <memset>
 80004b2:	4b05      	ldr	r3, [pc, #20]	; (80004c8 <std+0x38>)
 80004b4:	6263      	str	r3, [r4, #36]	; 0x24
 80004b6:	4b05      	ldr	r3, [pc, #20]	; (80004cc <std+0x3c>)
 80004b8:	62a3      	str	r3, [r4, #40]	; 0x28
 80004ba:	4b05      	ldr	r3, [pc, #20]	; (80004d0 <std+0x40>)
 80004bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80004be:	4b05      	ldr	r3, [pc, #20]	; (80004d4 <std+0x44>)
 80004c0:	6224      	str	r4, [r4, #32]
 80004c2:	6323      	str	r3, [r4, #48]	; 0x30
 80004c4:	bd10      	pop	{r4, pc}
 80004c6:	bf00      	nop
 80004c8:	08000615 	.word	0x08000615
 80004cc:	08000637 	.word	0x08000637
 80004d0:	0800066f 	.word	0x0800066f
 80004d4:	08000693 	.word	0x08000693

080004d8 <stdio_exit_handler>:
 80004d8:	4a02      	ldr	r2, [pc, #8]	; (80004e4 <stdio_exit_handler+0xc>)
 80004da:	4903      	ldr	r1, [pc, #12]	; (80004e8 <stdio_exit_handler+0x10>)
 80004dc:	4803      	ldr	r0, [pc, #12]	; (80004ec <stdio_exit_handler+0x14>)
 80004de:	f000 b869 	b.w	80005b4 <_fwalk_sglue>
 80004e2:	bf00      	nop
 80004e4:	20000000 	.word	0x20000000
 80004e8:	08001035 	.word	0x08001035
 80004ec:	2000000c 	.word	0x2000000c

080004f0 <cleanup_stdio>:
 80004f0:	6841      	ldr	r1, [r0, #4]
 80004f2:	4b0c      	ldr	r3, [pc, #48]	; (8000524 <cleanup_stdio+0x34>)
 80004f4:	4299      	cmp	r1, r3
 80004f6:	b510      	push	{r4, lr}
 80004f8:	4604      	mov	r4, r0
 80004fa:	d001      	beq.n	8000500 <cleanup_stdio+0x10>
 80004fc:	f000 fd9a 	bl	8001034 <_fflush_r>
 8000500:	68a1      	ldr	r1, [r4, #8]
 8000502:	4b09      	ldr	r3, [pc, #36]	; (8000528 <cleanup_stdio+0x38>)
 8000504:	4299      	cmp	r1, r3
 8000506:	d002      	beq.n	800050e <cleanup_stdio+0x1e>
 8000508:	4620      	mov	r0, r4
 800050a:	f000 fd93 	bl	8001034 <_fflush_r>
 800050e:	68e1      	ldr	r1, [r4, #12]
 8000510:	4b06      	ldr	r3, [pc, #24]	; (800052c <cleanup_stdio+0x3c>)
 8000512:	4299      	cmp	r1, r3
 8000514:	d004      	beq.n	8000520 <cleanup_stdio+0x30>
 8000516:	4620      	mov	r0, r4
 8000518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800051c:	f000 bd8a 	b.w	8001034 <_fflush_r>
 8000520:	bd10      	pop	{r4, pc}
 8000522:	bf00      	nop
 8000524:	2000007c 	.word	0x2000007c
 8000528:	200000e4 	.word	0x200000e4
 800052c:	2000014c 	.word	0x2000014c

08000530 <global_stdio_init.part.0>:
 8000530:	b510      	push	{r4, lr}
 8000532:	4b0b      	ldr	r3, [pc, #44]	; (8000560 <global_stdio_init.part.0+0x30>)
 8000534:	4c0b      	ldr	r4, [pc, #44]	; (8000564 <global_stdio_init.part.0+0x34>)
 8000536:	4a0c      	ldr	r2, [pc, #48]	; (8000568 <global_stdio_init.part.0+0x38>)
 8000538:	601a      	str	r2, [r3, #0]
 800053a:	4620      	mov	r0, r4
 800053c:	2200      	movs	r2, #0
 800053e:	2104      	movs	r1, #4
 8000540:	f7ff ffa6 	bl	8000490 <std>
 8000544:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000548:	2201      	movs	r2, #1
 800054a:	2109      	movs	r1, #9
 800054c:	f7ff ffa0 	bl	8000490 <std>
 8000550:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8000554:	2202      	movs	r2, #2
 8000556:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800055a:	2112      	movs	r1, #18
 800055c:	f7ff bf98 	b.w	8000490 <std>
 8000560:	200001b4 	.word	0x200001b4
 8000564:	2000007c 	.word	0x2000007c
 8000568:	080004d9 	.word	0x080004d9

0800056c <__sfp_lock_acquire>:
 800056c:	4801      	ldr	r0, [pc, #4]	; (8000574 <__sfp_lock_acquire+0x8>)
 800056e:	f000 b90d 	b.w	800078c <__retarget_lock_acquire_recursive>
 8000572:	bf00      	nop
 8000574:	200001bd 	.word	0x200001bd

08000578 <__sfp_lock_release>:
 8000578:	4801      	ldr	r0, [pc, #4]	; (8000580 <__sfp_lock_release+0x8>)
 800057a:	f000 b908 	b.w	800078e <__retarget_lock_release_recursive>
 800057e:	bf00      	nop
 8000580:	200001bd 	.word	0x200001bd

08000584 <__sinit>:
 8000584:	b510      	push	{r4, lr}
 8000586:	4604      	mov	r4, r0
 8000588:	f7ff fff0 	bl	800056c <__sfp_lock_acquire>
 800058c:	6a23      	ldr	r3, [r4, #32]
 800058e:	b11b      	cbz	r3, 8000598 <__sinit+0x14>
 8000590:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000594:	f7ff bff0 	b.w	8000578 <__sfp_lock_release>
 8000598:	4b04      	ldr	r3, [pc, #16]	; (80005ac <__sinit+0x28>)
 800059a:	6223      	str	r3, [r4, #32]
 800059c:	4b04      	ldr	r3, [pc, #16]	; (80005b0 <__sinit+0x2c>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	2b00      	cmp	r3, #0
 80005a2:	d1f5      	bne.n	8000590 <__sinit+0xc>
 80005a4:	f7ff ffc4 	bl	8000530 <global_stdio_init.part.0>
 80005a8:	e7f2      	b.n	8000590 <__sinit+0xc>
 80005aa:	bf00      	nop
 80005ac:	080004f1 	.word	0x080004f1
 80005b0:	200001b4 	.word	0x200001b4

080005b4 <_fwalk_sglue>:
 80005b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80005b8:	4607      	mov	r7, r0
 80005ba:	4688      	mov	r8, r1
 80005bc:	4614      	mov	r4, r2
 80005be:	2600      	movs	r6, #0
 80005c0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80005c4:	f1b9 0901 	subs.w	r9, r9, #1
 80005c8:	d505      	bpl.n	80005d6 <_fwalk_sglue+0x22>
 80005ca:	6824      	ldr	r4, [r4, #0]
 80005cc:	2c00      	cmp	r4, #0
 80005ce:	d1f7      	bne.n	80005c0 <_fwalk_sglue+0xc>
 80005d0:	4630      	mov	r0, r6
 80005d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80005d6:	89ab      	ldrh	r3, [r5, #12]
 80005d8:	2b01      	cmp	r3, #1
 80005da:	d907      	bls.n	80005ec <_fwalk_sglue+0x38>
 80005dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80005e0:	3301      	adds	r3, #1
 80005e2:	d003      	beq.n	80005ec <_fwalk_sglue+0x38>
 80005e4:	4629      	mov	r1, r5
 80005e6:	4638      	mov	r0, r7
 80005e8:	47c0      	blx	r8
 80005ea:	4306      	orrs	r6, r0
 80005ec:	3568      	adds	r5, #104	; 0x68
 80005ee:	e7e9      	b.n	80005c4 <_fwalk_sglue+0x10>

080005f0 <iprintf>:
 80005f0:	b40f      	push	{r0, r1, r2, r3}
 80005f2:	b507      	push	{r0, r1, r2, lr}
 80005f4:	4906      	ldr	r1, [pc, #24]	; (8000610 <iprintf+0x20>)
 80005f6:	ab04      	add	r3, sp, #16
 80005f8:	6808      	ldr	r0, [r1, #0]
 80005fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80005fe:	6881      	ldr	r1, [r0, #8]
 8000600:	9301      	str	r3, [sp, #4]
 8000602:	f000 f9e7 	bl	80009d4 <_vfiprintf_r>
 8000606:	b003      	add	sp, #12
 8000608:	f85d eb04 	ldr.w	lr, [sp], #4
 800060c:	b004      	add	sp, #16
 800060e:	4770      	bx	lr
 8000610:	20000058 	.word	0x20000058

08000614 <__sread>:
 8000614:	b510      	push	{r4, lr}
 8000616:	460c      	mov	r4, r1
 8000618:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800061c:	f000 f868 	bl	80006f0 <_read_r>
 8000620:	2800      	cmp	r0, #0
 8000622:	bfab      	itete	ge
 8000624:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000626:	89a3      	ldrhlt	r3, [r4, #12]
 8000628:	181b      	addge	r3, r3, r0
 800062a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800062e:	bfac      	ite	ge
 8000630:	6563      	strge	r3, [r4, #84]	; 0x54
 8000632:	81a3      	strhlt	r3, [r4, #12]
 8000634:	bd10      	pop	{r4, pc}

08000636 <__swrite>:
 8000636:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800063a:	461f      	mov	r7, r3
 800063c:	898b      	ldrh	r3, [r1, #12]
 800063e:	05db      	lsls	r3, r3, #23
 8000640:	4605      	mov	r5, r0
 8000642:	460c      	mov	r4, r1
 8000644:	4616      	mov	r6, r2
 8000646:	d505      	bpl.n	8000654 <__swrite+0x1e>
 8000648:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800064c:	2302      	movs	r3, #2
 800064e:	2200      	movs	r2, #0
 8000650:	f000 f83c 	bl	80006cc <_lseek_r>
 8000654:	89a3      	ldrh	r3, [r4, #12]
 8000656:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800065a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800065e:	81a3      	strh	r3, [r4, #12]
 8000660:	4632      	mov	r2, r6
 8000662:	463b      	mov	r3, r7
 8000664:	4628      	mov	r0, r5
 8000666:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800066a:	f000 b853 	b.w	8000714 <_write_r>

0800066e <__sseek>:
 800066e:	b510      	push	{r4, lr}
 8000670:	460c      	mov	r4, r1
 8000672:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000676:	f000 f829 	bl	80006cc <_lseek_r>
 800067a:	1c43      	adds	r3, r0, #1
 800067c:	89a3      	ldrh	r3, [r4, #12]
 800067e:	bf15      	itete	ne
 8000680:	6560      	strne	r0, [r4, #84]	; 0x54
 8000682:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000686:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800068a:	81a3      	strheq	r3, [r4, #12]
 800068c:	bf18      	it	ne
 800068e:	81a3      	strhne	r3, [r4, #12]
 8000690:	bd10      	pop	{r4, pc}

08000692 <__sclose>:
 8000692:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000696:	f000 b809 	b.w	80006ac <_close_r>

0800069a <memset>:
 800069a:	4402      	add	r2, r0
 800069c:	4603      	mov	r3, r0
 800069e:	4293      	cmp	r3, r2
 80006a0:	d100      	bne.n	80006a4 <memset+0xa>
 80006a2:	4770      	bx	lr
 80006a4:	f803 1b01 	strb.w	r1, [r3], #1
 80006a8:	e7f9      	b.n	800069e <memset+0x4>
	...

080006ac <_close_r>:
 80006ac:	b538      	push	{r3, r4, r5, lr}
 80006ae:	4d06      	ldr	r5, [pc, #24]	; (80006c8 <_close_r+0x1c>)
 80006b0:	2300      	movs	r3, #0
 80006b2:	4604      	mov	r4, r0
 80006b4:	4608      	mov	r0, r1
 80006b6:	602b      	str	r3, [r5, #0]
 80006b8:	f7ff fe55 	bl	8000366 <_close>
 80006bc:	1c43      	adds	r3, r0, #1
 80006be:	d102      	bne.n	80006c6 <_close_r+0x1a>
 80006c0:	682b      	ldr	r3, [r5, #0]
 80006c2:	b103      	cbz	r3, 80006c6 <_close_r+0x1a>
 80006c4:	6023      	str	r3, [r4, #0]
 80006c6:	bd38      	pop	{r3, r4, r5, pc}
 80006c8:	200001b8 	.word	0x200001b8

080006cc <_lseek_r>:
 80006cc:	b538      	push	{r3, r4, r5, lr}
 80006ce:	4d07      	ldr	r5, [pc, #28]	; (80006ec <_lseek_r+0x20>)
 80006d0:	4604      	mov	r4, r0
 80006d2:	4608      	mov	r0, r1
 80006d4:	4611      	mov	r1, r2
 80006d6:	2200      	movs	r2, #0
 80006d8:	602a      	str	r2, [r5, #0]
 80006da:	461a      	mov	r2, r3
 80006dc:	f7ff fe6a 	bl	80003b4 <_lseek>
 80006e0:	1c43      	adds	r3, r0, #1
 80006e2:	d102      	bne.n	80006ea <_lseek_r+0x1e>
 80006e4:	682b      	ldr	r3, [r5, #0]
 80006e6:	b103      	cbz	r3, 80006ea <_lseek_r+0x1e>
 80006e8:	6023      	str	r3, [r4, #0]
 80006ea:	bd38      	pop	{r3, r4, r5, pc}
 80006ec:	200001b8 	.word	0x200001b8

080006f0 <_read_r>:
 80006f0:	b538      	push	{r3, r4, r5, lr}
 80006f2:	4d07      	ldr	r5, [pc, #28]	; (8000710 <_read_r+0x20>)
 80006f4:	4604      	mov	r4, r0
 80006f6:	4608      	mov	r0, r1
 80006f8:	4611      	mov	r1, r2
 80006fa:	2200      	movs	r2, #0
 80006fc:	602a      	str	r2, [r5, #0]
 80006fe:	461a      	mov	r2, r3
 8000700:	f7ff fdf8 	bl	80002f4 <_read>
 8000704:	1c43      	adds	r3, r0, #1
 8000706:	d102      	bne.n	800070e <_read_r+0x1e>
 8000708:	682b      	ldr	r3, [r5, #0]
 800070a:	b103      	cbz	r3, 800070e <_read_r+0x1e>
 800070c:	6023      	str	r3, [r4, #0]
 800070e:	bd38      	pop	{r3, r4, r5, pc}
 8000710:	200001b8 	.word	0x200001b8

08000714 <_write_r>:
 8000714:	b538      	push	{r3, r4, r5, lr}
 8000716:	4d07      	ldr	r5, [pc, #28]	; (8000734 <_write_r+0x20>)
 8000718:	4604      	mov	r4, r0
 800071a:	4608      	mov	r0, r1
 800071c:	4611      	mov	r1, r2
 800071e:	2200      	movs	r2, #0
 8000720:	602a      	str	r2, [r5, #0]
 8000722:	461a      	mov	r2, r3
 8000724:	f7ff fe03 	bl	800032e <_write>
 8000728:	1c43      	adds	r3, r0, #1
 800072a:	d102      	bne.n	8000732 <_write_r+0x1e>
 800072c:	682b      	ldr	r3, [r5, #0]
 800072e:	b103      	cbz	r3, 8000732 <_write_r+0x1e>
 8000730:	6023      	str	r3, [r4, #0]
 8000732:	bd38      	pop	{r3, r4, r5, pc}
 8000734:	200001b8 	.word	0x200001b8

08000738 <__errno>:
 8000738:	4b01      	ldr	r3, [pc, #4]	; (8000740 <__errno+0x8>)
 800073a:	6818      	ldr	r0, [r3, #0]
 800073c:	4770      	bx	lr
 800073e:	bf00      	nop
 8000740:	20000058 	.word	0x20000058

08000744 <__libc_init_array>:
 8000744:	b570      	push	{r4, r5, r6, lr}
 8000746:	4d0d      	ldr	r5, [pc, #52]	; (800077c <__libc_init_array+0x38>)
 8000748:	4c0d      	ldr	r4, [pc, #52]	; (8000780 <__libc_init_array+0x3c>)
 800074a:	1b64      	subs	r4, r4, r5
 800074c:	10a4      	asrs	r4, r4, #2
 800074e:	2600      	movs	r6, #0
 8000750:	42a6      	cmp	r6, r4
 8000752:	d109      	bne.n	8000768 <__libc_init_array+0x24>
 8000754:	4d0b      	ldr	r5, [pc, #44]	; (8000784 <__libc_init_array+0x40>)
 8000756:	4c0c      	ldr	r4, [pc, #48]	; (8000788 <__libc_init_array+0x44>)
 8000758:	f000 fdbe 	bl	80012d8 <_init>
 800075c:	1b64      	subs	r4, r4, r5
 800075e:	10a4      	asrs	r4, r4, #2
 8000760:	2600      	movs	r6, #0
 8000762:	42a6      	cmp	r6, r4
 8000764:	d105      	bne.n	8000772 <__libc_init_array+0x2e>
 8000766:	bd70      	pop	{r4, r5, r6, pc}
 8000768:	f855 3b04 	ldr.w	r3, [r5], #4
 800076c:	4798      	blx	r3
 800076e:	3601      	adds	r6, #1
 8000770:	e7ee      	b.n	8000750 <__libc_init_array+0xc>
 8000772:	f855 3b04 	ldr.w	r3, [r5], #4
 8000776:	4798      	blx	r3
 8000778:	3601      	adds	r6, #1
 800077a:	e7f2      	b.n	8000762 <__libc_init_array+0x1e>
 800077c:	08001328 	.word	0x08001328
 8000780:	08001328 	.word	0x08001328
 8000784:	08001328 	.word	0x08001328
 8000788:	0800132c 	.word	0x0800132c

0800078c <__retarget_lock_acquire_recursive>:
 800078c:	4770      	bx	lr

0800078e <__retarget_lock_release_recursive>:
 800078e:	4770      	bx	lr

08000790 <_free_r>:
 8000790:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000792:	2900      	cmp	r1, #0
 8000794:	d044      	beq.n	8000820 <_free_r+0x90>
 8000796:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800079a:	9001      	str	r0, [sp, #4]
 800079c:	2b00      	cmp	r3, #0
 800079e:	f1a1 0404 	sub.w	r4, r1, #4
 80007a2:	bfb8      	it	lt
 80007a4:	18e4      	addlt	r4, r4, r3
 80007a6:	f000 f8df 	bl	8000968 <__malloc_lock>
 80007aa:	4a1e      	ldr	r2, [pc, #120]	; (8000824 <_free_r+0x94>)
 80007ac:	9801      	ldr	r0, [sp, #4]
 80007ae:	6813      	ldr	r3, [r2, #0]
 80007b0:	b933      	cbnz	r3, 80007c0 <_free_r+0x30>
 80007b2:	6063      	str	r3, [r4, #4]
 80007b4:	6014      	str	r4, [r2, #0]
 80007b6:	b003      	add	sp, #12
 80007b8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80007bc:	f000 b8da 	b.w	8000974 <__malloc_unlock>
 80007c0:	42a3      	cmp	r3, r4
 80007c2:	d908      	bls.n	80007d6 <_free_r+0x46>
 80007c4:	6825      	ldr	r5, [r4, #0]
 80007c6:	1961      	adds	r1, r4, r5
 80007c8:	428b      	cmp	r3, r1
 80007ca:	bf01      	itttt	eq
 80007cc:	6819      	ldreq	r1, [r3, #0]
 80007ce:	685b      	ldreq	r3, [r3, #4]
 80007d0:	1949      	addeq	r1, r1, r5
 80007d2:	6021      	streq	r1, [r4, #0]
 80007d4:	e7ed      	b.n	80007b2 <_free_r+0x22>
 80007d6:	461a      	mov	r2, r3
 80007d8:	685b      	ldr	r3, [r3, #4]
 80007da:	b10b      	cbz	r3, 80007e0 <_free_r+0x50>
 80007dc:	42a3      	cmp	r3, r4
 80007de:	d9fa      	bls.n	80007d6 <_free_r+0x46>
 80007e0:	6811      	ldr	r1, [r2, #0]
 80007e2:	1855      	adds	r5, r2, r1
 80007e4:	42a5      	cmp	r5, r4
 80007e6:	d10b      	bne.n	8000800 <_free_r+0x70>
 80007e8:	6824      	ldr	r4, [r4, #0]
 80007ea:	4421      	add	r1, r4
 80007ec:	1854      	adds	r4, r2, r1
 80007ee:	42a3      	cmp	r3, r4
 80007f0:	6011      	str	r1, [r2, #0]
 80007f2:	d1e0      	bne.n	80007b6 <_free_r+0x26>
 80007f4:	681c      	ldr	r4, [r3, #0]
 80007f6:	685b      	ldr	r3, [r3, #4]
 80007f8:	6053      	str	r3, [r2, #4]
 80007fa:	440c      	add	r4, r1
 80007fc:	6014      	str	r4, [r2, #0]
 80007fe:	e7da      	b.n	80007b6 <_free_r+0x26>
 8000800:	d902      	bls.n	8000808 <_free_r+0x78>
 8000802:	230c      	movs	r3, #12
 8000804:	6003      	str	r3, [r0, #0]
 8000806:	e7d6      	b.n	80007b6 <_free_r+0x26>
 8000808:	6825      	ldr	r5, [r4, #0]
 800080a:	1961      	adds	r1, r4, r5
 800080c:	428b      	cmp	r3, r1
 800080e:	bf04      	itt	eq
 8000810:	6819      	ldreq	r1, [r3, #0]
 8000812:	685b      	ldreq	r3, [r3, #4]
 8000814:	6063      	str	r3, [r4, #4]
 8000816:	bf04      	itt	eq
 8000818:	1949      	addeq	r1, r1, r5
 800081a:	6021      	streq	r1, [r4, #0]
 800081c:	6054      	str	r4, [r2, #4]
 800081e:	e7ca      	b.n	80007b6 <_free_r+0x26>
 8000820:	b003      	add	sp, #12
 8000822:	bd30      	pop	{r4, r5, pc}
 8000824:	200001c0 	.word	0x200001c0

08000828 <sbrk_aligned>:
 8000828:	b570      	push	{r4, r5, r6, lr}
 800082a:	4e0e      	ldr	r6, [pc, #56]	; (8000864 <sbrk_aligned+0x3c>)
 800082c:	460c      	mov	r4, r1
 800082e:	6831      	ldr	r1, [r6, #0]
 8000830:	4605      	mov	r5, r0
 8000832:	b911      	cbnz	r1, 800083a <sbrk_aligned+0x12>
 8000834:	f000 fcbc 	bl	80011b0 <_sbrk_r>
 8000838:	6030      	str	r0, [r6, #0]
 800083a:	4621      	mov	r1, r4
 800083c:	4628      	mov	r0, r5
 800083e:	f000 fcb7 	bl	80011b0 <_sbrk_r>
 8000842:	1c43      	adds	r3, r0, #1
 8000844:	d00a      	beq.n	800085c <sbrk_aligned+0x34>
 8000846:	1cc4      	adds	r4, r0, #3
 8000848:	f024 0403 	bic.w	r4, r4, #3
 800084c:	42a0      	cmp	r0, r4
 800084e:	d007      	beq.n	8000860 <sbrk_aligned+0x38>
 8000850:	1a21      	subs	r1, r4, r0
 8000852:	4628      	mov	r0, r5
 8000854:	f000 fcac 	bl	80011b0 <_sbrk_r>
 8000858:	3001      	adds	r0, #1
 800085a:	d101      	bne.n	8000860 <sbrk_aligned+0x38>
 800085c:	f04f 34ff 	mov.w	r4, #4294967295
 8000860:	4620      	mov	r0, r4
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	200001c4 	.word	0x200001c4

08000868 <_malloc_r>:
 8000868:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800086c:	1ccd      	adds	r5, r1, #3
 800086e:	f025 0503 	bic.w	r5, r5, #3
 8000872:	3508      	adds	r5, #8
 8000874:	2d0c      	cmp	r5, #12
 8000876:	bf38      	it	cc
 8000878:	250c      	movcc	r5, #12
 800087a:	2d00      	cmp	r5, #0
 800087c:	4607      	mov	r7, r0
 800087e:	db01      	blt.n	8000884 <_malloc_r+0x1c>
 8000880:	42a9      	cmp	r1, r5
 8000882:	d905      	bls.n	8000890 <_malloc_r+0x28>
 8000884:	230c      	movs	r3, #12
 8000886:	603b      	str	r3, [r7, #0]
 8000888:	2600      	movs	r6, #0
 800088a:	4630      	mov	r0, r6
 800088c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000890:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000964 <_malloc_r+0xfc>
 8000894:	f000 f868 	bl	8000968 <__malloc_lock>
 8000898:	f8d8 3000 	ldr.w	r3, [r8]
 800089c:	461c      	mov	r4, r3
 800089e:	bb5c      	cbnz	r4, 80008f8 <_malloc_r+0x90>
 80008a0:	4629      	mov	r1, r5
 80008a2:	4638      	mov	r0, r7
 80008a4:	f7ff ffc0 	bl	8000828 <sbrk_aligned>
 80008a8:	1c43      	adds	r3, r0, #1
 80008aa:	4604      	mov	r4, r0
 80008ac:	d155      	bne.n	800095a <_malloc_r+0xf2>
 80008ae:	f8d8 4000 	ldr.w	r4, [r8]
 80008b2:	4626      	mov	r6, r4
 80008b4:	2e00      	cmp	r6, #0
 80008b6:	d145      	bne.n	8000944 <_malloc_r+0xdc>
 80008b8:	2c00      	cmp	r4, #0
 80008ba:	d048      	beq.n	800094e <_malloc_r+0xe6>
 80008bc:	6823      	ldr	r3, [r4, #0]
 80008be:	4631      	mov	r1, r6
 80008c0:	4638      	mov	r0, r7
 80008c2:	eb04 0903 	add.w	r9, r4, r3
 80008c6:	f000 fc73 	bl	80011b0 <_sbrk_r>
 80008ca:	4581      	cmp	r9, r0
 80008cc:	d13f      	bne.n	800094e <_malloc_r+0xe6>
 80008ce:	6821      	ldr	r1, [r4, #0]
 80008d0:	1a6d      	subs	r5, r5, r1
 80008d2:	4629      	mov	r1, r5
 80008d4:	4638      	mov	r0, r7
 80008d6:	f7ff ffa7 	bl	8000828 <sbrk_aligned>
 80008da:	3001      	adds	r0, #1
 80008dc:	d037      	beq.n	800094e <_malloc_r+0xe6>
 80008de:	6823      	ldr	r3, [r4, #0]
 80008e0:	442b      	add	r3, r5
 80008e2:	6023      	str	r3, [r4, #0]
 80008e4:	f8d8 3000 	ldr.w	r3, [r8]
 80008e8:	2b00      	cmp	r3, #0
 80008ea:	d038      	beq.n	800095e <_malloc_r+0xf6>
 80008ec:	685a      	ldr	r2, [r3, #4]
 80008ee:	42a2      	cmp	r2, r4
 80008f0:	d12b      	bne.n	800094a <_malloc_r+0xe2>
 80008f2:	2200      	movs	r2, #0
 80008f4:	605a      	str	r2, [r3, #4]
 80008f6:	e00f      	b.n	8000918 <_malloc_r+0xb0>
 80008f8:	6822      	ldr	r2, [r4, #0]
 80008fa:	1b52      	subs	r2, r2, r5
 80008fc:	d41f      	bmi.n	800093e <_malloc_r+0xd6>
 80008fe:	2a0b      	cmp	r2, #11
 8000900:	d917      	bls.n	8000932 <_malloc_r+0xca>
 8000902:	1961      	adds	r1, r4, r5
 8000904:	42a3      	cmp	r3, r4
 8000906:	6025      	str	r5, [r4, #0]
 8000908:	bf18      	it	ne
 800090a:	6059      	strne	r1, [r3, #4]
 800090c:	6863      	ldr	r3, [r4, #4]
 800090e:	bf08      	it	eq
 8000910:	f8c8 1000 	streq.w	r1, [r8]
 8000914:	5162      	str	r2, [r4, r5]
 8000916:	604b      	str	r3, [r1, #4]
 8000918:	4638      	mov	r0, r7
 800091a:	f104 060b 	add.w	r6, r4, #11
 800091e:	f000 f829 	bl	8000974 <__malloc_unlock>
 8000922:	f026 0607 	bic.w	r6, r6, #7
 8000926:	1d23      	adds	r3, r4, #4
 8000928:	1af2      	subs	r2, r6, r3
 800092a:	d0ae      	beq.n	800088a <_malloc_r+0x22>
 800092c:	1b9b      	subs	r3, r3, r6
 800092e:	50a3      	str	r3, [r4, r2]
 8000930:	e7ab      	b.n	800088a <_malloc_r+0x22>
 8000932:	42a3      	cmp	r3, r4
 8000934:	6862      	ldr	r2, [r4, #4]
 8000936:	d1dd      	bne.n	80008f4 <_malloc_r+0x8c>
 8000938:	f8c8 2000 	str.w	r2, [r8]
 800093c:	e7ec      	b.n	8000918 <_malloc_r+0xb0>
 800093e:	4623      	mov	r3, r4
 8000940:	6864      	ldr	r4, [r4, #4]
 8000942:	e7ac      	b.n	800089e <_malloc_r+0x36>
 8000944:	4634      	mov	r4, r6
 8000946:	6876      	ldr	r6, [r6, #4]
 8000948:	e7b4      	b.n	80008b4 <_malloc_r+0x4c>
 800094a:	4613      	mov	r3, r2
 800094c:	e7cc      	b.n	80008e8 <_malloc_r+0x80>
 800094e:	230c      	movs	r3, #12
 8000950:	603b      	str	r3, [r7, #0]
 8000952:	4638      	mov	r0, r7
 8000954:	f000 f80e 	bl	8000974 <__malloc_unlock>
 8000958:	e797      	b.n	800088a <_malloc_r+0x22>
 800095a:	6025      	str	r5, [r4, #0]
 800095c:	e7dc      	b.n	8000918 <_malloc_r+0xb0>
 800095e:	605b      	str	r3, [r3, #4]
 8000960:	deff      	udf	#255	; 0xff
 8000962:	bf00      	nop
 8000964:	200001c0 	.word	0x200001c0

08000968 <__malloc_lock>:
 8000968:	4801      	ldr	r0, [pc, #4]	; (8000970 <__malloc_lock+0x8>)
 800096a:	f7ff bf0f 	b.w	800078c <__retarget_lock_acquire_recursive>
 800096e:	bf00      	nop
 8000970:	200001bc 	.word	0x200001bc

08000974 <__malloc_unlock>:
 8000974:	4801      	ldr	r0, [pc, #4]	; (800097c <__malloc_unlock+0x8>)
 8000976:	f7ff bf0a 	b.w	800078e <__retarget_lock_release_recursive>
 800097a:	bf00      	nop
 800097c:	200001bc 	.word	0x200001bc

08000980 <__sfputc_r>:
 8000980:	6893      	ldr	r3, [r2, #8]
 8000982:	3b01      	subs	r3, #1
 8000984:	2b00      	cmp	r3, #0
 8000986:	b410      	push	{r4}
 8000988:	6093      	str	r3, [r2, #8]
 800098a:	da08      	bge.n	800099e <__sfputc_r+0x1e>
 800098c:	6994      	ldr	r4, [r2, #24]
 800098e:	42a3      	cmp	r3, r4
 8000990:	db01      	blt.n	8000996 <__sfputc_r+0x16>
 8000992:	290a      	cmp	r1, #10
 8000994:	d103      	bne.n	800099e <__sfputc_r+0x1e>
 8000996:	f85d 4b04 	ldr.w	r4, [sp], #4
 800099a:	f000 bb73 	b.w	8001084 <__swbuf_r>
 800099e:	6813      	ldr	r3, [r2, #0]
 80009a0:	1c58      	adds	r0, r3, #1
 80009a2:	6010      	str	r0, [r2, #0]
 80009a4:	7019      	strb	r1, [r3, #0]
 80009a6:	4608      	mov	r0, r1
 80009a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009ac:	4770      	bx	lr

080009ae <__sfputs_r>:
 80009ae:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009b0:	4606      	mov	r6, r0
 80009b2:	460f      	mov	r7, r1
 80009b4:	4614      	mov	r4, r2
 80009b6:	18d5      	adds	r5, r2, r3
 80009b8:	42ac      	cmp	r4, r5
 80009ba:	d101      	bne.n	80009c0 <__sfputs_r+0x12>
 80009bc:	2000      	movs	r0, #0
 80009be:	e007      	b.n	80009d0 <__sfputs_r+0x22>
 80009c0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009c4:	463a      	mov	r2, r7
 80009c6:	4630      	mov	r0, r6
 80009c8:	f7ff ffda 	bl	8000980 <__sfputc_r>
 80009cc:	1c43      	adds	r3, r0, #1
 80009ce:	d1f3      	bne.n	80009b8 <__sfputs_r+0xa>
 80009d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009d4 <_vfiprintf_r>:
 80009d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009d8:	460d      	mov	r5, r1
 80009da:	b09d      	sub	sp, #116	; 0x74
 80009dc:	4614      	mov	r4, r2
 80009de:	4698      	mov	r8, r3
 80009e0:	4606      	mov	r6, r0
 80009e2:	b118      	cbz	r0, 80009ec <_vfiprintf_r+0x18>
 80009e4:	6a03      	ldr	r3, [r0, #32]
 80009e6:	b90b      	cbnz	r3, 80009ec <_vfiprintf_r+0x18>
 80009e8:	f7ff fdcc 	bl	8000584 <__sinit>
 80009ec:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80009ee:	07d9      	lsls	r1, r3, #31
 80009f0:	d405      	bmi.n	80009fe <_vfiprintf_r+0x2a>
 80009f2:	89ab      	ldrh	r3, [r5, #12]
 80009f4:	059a      	lsls	r2, r3, #22
 80009f6:	d402      	bmi.n	80009fe <_vfiprintf_r+0x2a>
 80009f8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80009fa:	f7ff fec7 	bl	800078c <__retarget_lock_acquire_recursive>
 80009fe:	89ab      	ldrh	r3, [r5, #12]
 8000a00:	071b      	lsls	r3, r3, #28
 8000a02:	d501      	bpl.n	8000a08 <_vfiprintf_r+0x34>
 8000a04:	692b      	ldr	r3, [r5, #16]
 8000a06:	b99b      	cbnz	r3, 8000a30 <_vfiprintf_r+0x5c>
 8000a08:	4629      	mov	r1, r5
 8000a0a:	4630      	mov	r0, r6
 8000a0c:	f000 fb78 	bl	8001100 <__swsetup_r>
 8000a10:	b170      	cbz	r0, 8000a30 <_vfiprintf_r+0x5c>
 8000a12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a14:	07dc      	lsls	r4, r3, #31
 8000a16:	d504      	bpl.n	8000a22 <_vfiprintf_r+0x4e>
 8000a18:	f04f 30ff 	mov.w	r0, #4294967295
 8000a1c:	b01d      	add	sp, #116	; 0x74
 8000a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a22:	89ab      	ldrh	r3, [r5, #12]
 8000a24:	0598      	lsls	r0, r3, #22
 8000a26:	d4f7      	bmi.n	8000a18 <_vfiprintf_r+0x44>
 8000a28:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a2a:	f7ff feb0 	bl	800078e <__retarget_lock_release_recursive>
 8000a2e:	e7f3      	b.n	8000a18 <_vfiprintf_r+0x44>
 8000a30:	2300      	movs	r3, #0
 8000a32:	9309      	str	r3, [sp, #36]	; 0x24
 8000a34:	2320      	movs	r3, #32
 8000a36:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a3a:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a3e:	2330      	movs	r3, #48	; 0x30
 8000a40:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000bf4 <_vfiprintf_r+0x220>
 8000a44:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a48:	f04f 0901 	mov.w	r9, #1
 8000a4c:	4623      	mov	r3, r4
 8000a4e:	469a      	mov	sl, r3
 8000a50:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a54:	b10a      	cbz	r2, 8000a5a <_vfiprintf_r+0x86>
 8000a56:	2a25      	cmp	r2, #37	; 0x25
 8000a58:	d1f9      	bne.n	8000a4e <_vfiprintf_r+0x7a>
 8000a5a:	ebba 0b04 	subs.w	fp, sl, r4
 8000a5e:	d00b      	beq.n	8000a78 <_vfiprintf_r+0xa4>
 8000a60:	465b      	mov	r3, fp
 8000a62:	4622      	mov	r2, r4
 8000a64:	4629      	mov	r1, r5
 8000a66:	4630      	mov	r0, r6
 8000a68:	f7ff ffa1 	bl	80009ae <__sfputs_r>
 8000a6c:	3001      	adds	r0, #1
 8000a6e:	f000 80a9 	beq.w	8000bc4 <_vfiprintf_r+0x1f0>
 8000a72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000a74:	445a      	add	r2, fp
 8000a76:	9209      	str	r2, [sp, #36]	; 0x24
 8000a78:	f89a 3000 	ldrb.w	r3, [sl]
 8000a7c:	2b00      	cmp	r3, #0
 8000a7e:	f000 80a1 	beq.w	8000bc4 <_vfiprintf_r+0x1f0>
 8000a82:	2300      	movs	r3, #0
 8000a84:	f04f 32ff 	mov.w	r2, #4294967295
 8000a88:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a8c:	f10a 0a01 	add.w	sl, sl, #1
 8000a90:	9304      	str	r3, [sp, #16]
 8000a92:	9307      	str	r3, [sp, #28]
 8000a94:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a98:	931a      	str	r3, [sp, #104]	; 0x68
 8000a9a:	4654      	mov	r4, sl
 8000a9c:	2205      	movs	r2, #5
 8000a9e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000aa2:	4854      	ldr	r0, [pc, #336]	; (8000bf4 <_vfiprintf_r+0x220>)
 8000aa4:	f7ff fb9c 	bl	80001e0 <memchr>
 8000aa8:	9a04      	ldr	r2, [sp, #16]
 8000aaa:	b9d8      	cbnz	r0, 8000ae4 <_vfiprintf_r+0x110>
 8000aac:	06d1      	lsls	r1, r2, #27
 8000aae:	bf44      	itt	mi
 8000ab0:	2320      	movmi	r3, #32
 8000ab2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ab6:	0713      	lsls	r3, r2, #28
 8000ab8:	bf44      	itt	mi
 8000aba:	232b      	movmi	r3, #43	; 0x2b
 8000abc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ac0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ac4:	2b2a      	cmp	r3, #42	; 0x2a
 8000ac6:	d015      	beq.n	8000af4 <_vfiprintf_r+0x120>
 8000ac8:	9a07      	ldr	r2, [sp, #28]
 8000aca:	4654      	mov	r4, sl
 8000acc:	2000      	movs	r0, #0
 8000ace:	f04f 0c0a 	mov.w	ip, #10
 8000ad2:	4621      	mov	r1, r4
 8000ad4:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000ad8:	3b30      	subs	r3, #48	; 0x30
 8000ada:	2b09      	cmp	r3, #9
 8000adc:	d94d      	bls.n	8000b7a <_vfiprintf_r+0x1a6>
 8000ade:	b1b0      	cbz	r0, 8000b0e <_vfiprintf_r+0x13a>
 8000ae0:	9207      	str	r2, [sp, #28]
 8000ae2:	e014      	b.n	8000b0e <_vfiprintf_r+0x13a>
 8000ae4:	eba0 0308 	sub.w	r3, r0, r8
 8000ae8:	fa09 f303 	lsl.w	r3, r9, r3
 8000aec:	4313      	orrs	r3, r2
 8000aee:	9304      	str	r3, [sp, #16]
 8000af0:	46a2      	mov	sl, r4
 8000af2:	e7d2      	b.n	8000a9a <_vfiprintf_r+0xc6>
 8000af4:	9b03      	ldr	r3, [sp, #12]
 8000af6:	1d19      	adds	r1, r3, #4
 8000af8:	681b      	ldr	r3, [r3, #0]
 8000afa:	9103      	str	r1, [sp, #12]
 8000afc:	2b00      	cmp	r3, #0
 8000afe:	bfbb      	ittet	lt
 8000b00:	425b      	neglt	r3, r3
 8000b02:	f042 0202 	orrlt.w	r2, r2, #2
 8000b06:	9307      	strge	r3, [sp, #28]
 8000b08:	9307      	strlt	r3, [sp, #28]
 8000b0a:	bfb8      	it	lt
 8000b0c:	9204      	strlt	r2, [sp, #16]
 8000b0e:	7823      	ldrb	r3, [r4, #0]
 8000b10:	2b2e      	cmp	r3, #46	; 0x2e
 8000b12:	d10c      	bne.n	8000b2e <_vfiprintf_r+0x15a>
 8000b14:	7863      	ldrb	r3, [r4, #1]
 8000b16:	2b2a      	cmp	r3, #42	; 0x2a
 8000b18:	d134      	bne.n	8000b84 <_vfiprintf_r+0x1b0>
 8000b1a:	9b03      	ldr	r3, [sp, #12]
 8000b1c:	1d1a      	adds	r2, r3, #4
 8000b1e:	681b      	ldr	r3, [r3, #0]
 8000b20:	9203      	str	r2, [sp, #12]
 8000b22:	2b00      	cmp	r3, #0
 8000b24:	bfb8      	it	lt
 8000b26:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b2a:	3402      	adds	r4, #2
 8000b2c:	9305      	str	r3, [sp, #20]
 8000b2e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8000c04 <_vfiprintf_r+0x230>
 8000b32:	7821      	ldrb	r1, [r4, #0]
 8000b34:	2203      	movs	r2, #3
 8000b36:	4650      	mov	r0, sl
 8000b38:	f7ff fb52 	bl	80001e0 <memchr>
 8000b3c:	b138      	cbz	r0, 8000b4e <_vfiprintf_r+0x17a>
 8000b3e:	9b04      	ldr	r3, [sp, #16]
 8000b40:	eba0 000a 	sub.w	r0, r0, sl
 8000b44:	2240      	movs	r2, #64	; 0x40
 8000b46:	4082      	lsls	r2, r0
 8000b48:	4313      	orrs	r3, r2
 8000b4a:	3401      	adds	r4, #1
 8000b4c:	9304      	str	r3, [sp, #16]
 8000b4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b52:	4829      	ldr	r0, [pc, #164]	; (8000bf8 <_vfiprintf_r+0x224>)
 8000b54:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b58:	2206      	movs	r2, #6
 8000b5a:	f7ff fb41 	bl	80001e0 <memchr>
 8000b5e:	2800      	cmp	r0, #0
 8000b60:	d03f      	beq.n	8000be2 <_vfiprintf_r+0x20e>
 8000b62:	4b26      	ldr	r3, [pc, #152]	; (8000bfc <_vfiprintf_r+0x228>)
 8000b64:	bb1b      	cbnz	r3, 8000bae <_vfiprintf_r+0x1da>
 8000b66:	9b03      	ldr	r3, [sp, #12]
 8000b68:	3307      	adds	r3, #7
 8000b6a:	f023 0307 	bic.w	r3, r3, #7
 8000b6e:	3308      	adds	r3, #8
 8000b70:	9303      	str	r3, [sp, #12]
 8000b72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b74:	443b      	add	r3, r7
 8000b76:	9309      	str	r3, [sp, #36]	; 0x24
 8000b78:	e768      	b.n	8000a4c <_vfiprintf_r+0x78>
 8000b7a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000b7e:	460c      	mov	r4, r1
 8000b80:	2001      	movs	r0, #1
 8000b82:	e7a6      	b.n	8000ad2 <_vfiprintf_r+0xfe>
 8000b84:	2300      	movs	r3, #0
 8000b86:	3401      	adds	r4, #1
 8000b88:	9305      	str	r3, [sp, #20]
 8000b8a:	4619      	mov	r1, r3
 8000b8c:	f04f 0c0a 	mov.w	ip, #10
 8000b90:	4620      	mov	r0, r4
 8000b92:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b96:	3a30      	subs	r2, #48	; 0x30
 8000b98:	2a09      	cmp	r2, #9
 8000b9a:	d903      	bls.n	8000ba4 <_vfiprintf_r+0x1d0>
 8000b9c:	2b00      	cmp	r3, #0
 8000b9e:	d0c6      	beq.n	8000b2e <_vfiprintf_r+0x15a>
 8000ba0:	9105      	str	r1, [sp, #20]
 8000ba2:	e7c4      	b.n	8000b2e <_vfiprintf_r+0x15a>
 8000ba4:	fb0c 2101 	mla	r1, ip, r1, r2
 8000ba8:	4604      	mov	r4, r0
 8000baa:	2301      	movs	r3, #1
 8000bac:	e7f0      	b.n	8000b90 <_vfiprintf_r+0x1bc>
 8000bae:	ab03      	add	r3, sp, #12
 8000bb0:	9300      	str	r3, [sp, #0]
 8000bb2:	462a      	mov	r2, r5
 8000bb4:	4b12      	ldr	r3, [pc, #72]	; (8000c00 <_vfiprintf_r+0x22c>)
 8000bb6:	a904      	add	r1, sp, #16
 8000bb8:	4630      	mov	r0, r6
 8000bba:	f3af 8000 	nop.w
 8000bbe:	4607      	mov	r7, r0
 8000bc0:	1c78      	adds	r0, r7, #1
 8000bc2:	d1d6      	bne.n	8000b72 <_vfiprintf_r+0x19e>
 8000bc4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000bc6:	07d9      	lsls	r1, r3, #31
 8000bc8:	d405      	bmi.n	8000bd6 <_vfiprintf_r+0x202>
 8000bca:	89ab      	ldrh	r3, [r5, #12]
 8000bcc:	059a      	lsls	r2, r3, #22
 8000bce:	d402      	bmi.n	8000bd6 <_vfiprintf_r+0x202>
 8000bd0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000bd2:	f7ff fddc 	bl	800078e <__retarget_lock_release_recursive>
 8000bd6:	89ab      	ldrh	r3, [r5, #12]
 8000bd8:	065b      	lsls	r3, r3, #25
 8000bda:	f53f af1d 	bmi.w	8000a18 <_vfiprintf_r+0x44>
 8000bde:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000be0:	e71c      	b.n	8000a1c <_vfiprintf_r+0x48>
 8000be2:	ab03      	add	r3, sp, #12
 8000be4:	9300      	str	r3, [sp, #0]
 8000be6:	462a      	mov	r2, r5
 8000be8:	4b05      	ldr	r3, [pc, #20]	; (8000c00 <_vfiprintf_r+0x22c>)
 8000bea:	a904      	add	r1, sp, #16
 8000bec:	4630      	mov	r0, r6
 8000bee:	f000 f879 	bl	8000ce4 <_printf_i>
 8000bf2:	e7e4      	b.n	8000bbe <_vfiprintf_r+0x1ea>
 8000bf4:	080012f4 	.word	0x080012f4
 8000bf8:	080012fe 	.word	0x080012fe
 8000bfc:	00000000 	.word	0x00000000
 8000c00:	080009af 	.word	0x080009af
 8000c04:	080012fa 	.word	0x080012fa

08000c08 <_printf_common>:
 8000c08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c0c:	4616      	mov	r6, r2
 8000c0e:	4699      	mov	r9, r3
 8000c10:	688a      	ldr	r2, [r1, #8]
 8000c12:	690b      	ldr	r3, [r1, #16]
 8000c14:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c18:	4293      	cmp	r3, r2
 8000c1a:	bfb8      	it	lt
 8000c1c:	4613      	movlt	r3, r2
 8000c1e:	6033      	str	r3, [r6, #0]
 8000c20:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c24:	4607      	mov	r7, r0
 8000c26:	460c      	mov	r4, r1
 8000c28:	b10a      	cbz	r2, 8000c2e <_printf_common+0x26>
 8000c2a:	3301      	adds	r3, #1
 8000c2c:	6033      	str	r3, [r6, #0]
 8000c2e:	6823      	ldr	r3, [r4, #0]
 8000c30:	0699      	lsls	r1, r3, #26
 8000c32:	bf42      	ittt	mi
 8000c34:	6833      	ldrmi	r3, [r6, #0]
 8000c36:	3302      	addmi	r3, #2
 8000c38:	6033      	strmi	r3, [r6, #0]
 8000c3a:	6825      	ldr	r5, [r4, #0]
 8000c3c:	f015 0506 	ands.w	r5, r5, #6
 8000c40:	d106      	bne.n	8000c50 <_printf_common+0x48>
 8000c42:	f104 0a19 	add.w	sl, r4, #25
 8000c46:	68e3      	ldr	r3, [r4, #12]
 8000c48:	6832      	ldr	r2, [r6, #0]
 8000c4a:	1a9b      	subs	r3, r3, r2
 8000c4c:	42ab      	cmp	r3, r5
 8000c4e:	dc26      	bgt.n	8000c9e <_printf_common+0x96>
 8000c50:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000c54:	1e13      	subs	r3, r2, #0
 8000c56:	6822      	ldr	r2, [r4, #0]
 8000c58:	bf18      	it	ne
 8000c5a:	2301      	movne	r3, #1
 8000c5c:	0692      	lsls	r2, r2, #26
 8000c5e:	d42b      	bmi.n	8000cb8 <_printf_common+0xb0>
 8000c60:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c64:	4649      	mov	r1, r9
 8000c66:	4638      	mov	r0, r7
 8000c68:	47c0      	blx	r8
 8000c6a:	3001      	adds	r0, #1
 8000c6c:	d01e      	beq.n	8000cac <_printf_common+0xa4>
 8000c6e:	6823      	ldr	r3, [r4, #0]
 8000c70:	6922      	ldr	r2, [r4, #16]
 8000c72:	f003 0306 	and.w	r3, r3, #6
 8000c76:	2b04      	cmp	r3, #4
 8000c78:	bf02      	ittt	eq
 8000c7a:	68e5      	ldreq	r5, [r4, #12]
 8000c7c:	6833      	ldreq	r3, [r6, #0]
 8000c7e:	1aed      	subeq	r5, r5, r3
 8000c80:	68a3      	ldr	r3, [r4, #8]
 8000c82:	bf0c      	ite	eq
 8000c84:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c88:	2500      	movne	r5, #0
 8000c8a:	4293      	cmp	r3, r2
 8000c8c:	bfc4      	itt	gt
 8000c8e:	1a9b      	subgt	r3, r3, r2
 8000c90:	18ed      	addgt	r5, r5, r3
 8000c92:	2600      	movs	r6, #0
 8000c94:	341a      	adds	r4, #26
 8000c96:	42b5      	cmp	r5, r6
 8000c98:	d11a      	bne.n	8000cd0 <_printf_common+0xc8>
 8000c9a:	2000      	movs	r0, #0
 8000c9c:	e008      	b.n	8000cb0 <_printf_common+0xa8>
 8000c9e:	2301      	movs	r3, #1
 8000ca0:	4652      	mov	r2, sl
 8000ca2:	4649      	mov	r1, r9
 8000ca4:	4638      	mov	r0, r7
 8000ca6:	47c0      	blx	r8
 8000ca8:	3001      	adds	r0, #1
 8000caa:	d103      	bne.n	8000cb4 <_printf_common+0xac>
 8000cac:	f04f 30ff 	mov.w	r0, #4294967295
 8000cb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cb4:	3501      	adds	r5, #1
 8000cb6:	e7c6      	b.n	8000c46 <_printf_common+0x3e>
 8000cb8:	18e1      	adds	r1, r4, r3
 8000cba:	1c5a      	adds	r2, r3, #1
 8000cbc:	2030      	movs	r0, #48	; 0x30
 8000cbe:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000cc2:	4422      	add	r2, r4
 8000cc4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000cc8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000ccc:	3302      	adds	r3, #2
 8000cce:	e7c7      	b.n	8000c60 <_printf_common+0x58>
 8000cd0:	2301      	movs	r3, #1
 8000cd2:	4622      	mov	r2, r4
 8000cd4:	4649      	mov	r1, r9
 8000cd6:	4638      	mov	r0, r7
 8000cd8:	47c0      	blx	r8
 8000cda:	3001      	adds	r0, #1
 8000cdc:	d0e6      	beq.n	8000cac <_printf_common+0xa4>
 8000cde:	3601      	adds	r6, #1
 8000ce0:	e7d9      	b.n	8000c96 <_printf_common+0x8e>
	...

08000ce4 <_printf_i>:
 8000ce4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000ce8:	7e0f      	ldrb	r7, [r1, #24]
 8000cea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000cec:	2f78      	cmp	r7, #120	; 0x78
 8000cee:	4691      	mov	r9, r2
 8000cf0:	4680      	mov	r8, r0
 8000cf2:	460c      	mov	r4, r1
 8000cf4:	469a      	mov	sl, r3
 8000cf6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000cfa:	d807      	bhi.n	8000d0c <_printf_i+0x28>
 8000cfc:	2f62      	cmp	r7, #98	; 0x62
 8000cfe:	d80a      	bhi.n	8000d16 <_printf_i+0x32>
 8000d00:	2f00      	cmp	r7, #0
 8000d02:	f000 80d4 	beq.w	8000eae <_printf_i+0x1ca>
 8000d06:	2f58      	cmp	r7, #88	; 0x58
 8000d08:	f000 80c0 	beq.w	8000e8c <_printf_i+0x1a8>
 8000d0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d10:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d14:	e03a      	b.n	8000d8c <_printf_i+0xa8>
 8000d16:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d1a:	2b15      	cmp	r3, #21
 8000d1c:	d8f6      	bhi.n	8000d0c <_printf_i+0x28>
 8000d1e:	a101      	add	r1, pc, #4	; (adr r1, 8000d24 <_printf_i+0x40>)
 8000d20:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000d24:	08000d7d 	.word	0x08000d7d
 8000d28:	08000d91 	.word	0x08000d91
 8000d2c:	08000d0d 	.word	0x08000d0d
 8000d30:	08000d0d 	.word	0x08000d0d
 8000d34:	08000d0d 	.word	0x08000d0d
 8000d38:	08000d0d 	.word	0x08000d0d
 8000d3c:	08000d91 	.word	0x08000d91
 8000d40:	08000d0d 	.word	0x08000d0d
 8000d44:	08000d0d 	.word	0x08000d0d
 8000d48:	08000d0d 	.word	0x08000d0d
 8000d4c:	08000d0d 	.word	0x08000d0d
 8000d50:	08000e95 	.word	0x08000e95
 8000d54:	08000dbd 	.word	0x08000dbd
 8000d58:	08000e4f 	.word	0x08000e4f
 8000d5c:	08000d0d 	.word	0x08000d0d
 8000d60:	08000d0d 	.word	0x08000d0d
 8000d64:	08000eb7 	.word	0x08000eb7
 8000d68:	08000d0d 	.word	0x08000d0d
 8000d6c:	08000dbd 	.word	0x08000dbd
 8000d70:	08000d0d 	.word	0x08000d0d
 8000d74:	08000d0d 	.word	0x08000d0d
 8000d78:	08000e57 	.word	0x08000e57
 8000d7c:	682b      	ldr	r3, [r5, #0]
 8000d7e:	1d1a      	adds	r2, r3, #4
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	602a      	str	r2, [r5, #0]
 8000d84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d8c:	2301      	movs	r3, #1
 8000d8e:	e09f      	b.n	8000ed0 <_printf_i+0x1ec>
 8000d90:	6820      	ldr	r0, [r4, #0]
 8000d92:	682b      	ldr	r3, [r5, #0]
 8000d94:	0607      	lsls	r7, r0, #24
 8000d96:	f103 0104 	add.w	r1, r3, #4
 8000d9a:	6029      	str	r1, [r5, #0]
 8000d9c:	d501      	bpl.n	8000da2 <_printf_i+0xbe>
 8000d9e:	681e      	ldr	r6, [r3, #0]
 8000da0:	e003      	b.n	8000daa <_printf_i+0xc6>
 8000da2:	0646      	lsls	r6, r0, #25
 8000da4:	d5fb      	bpl.n	8000d9e <_printf_i+0xba>
 8000da6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8000daa:	2e00      	cmp	r6, #0
 8000dac:	da03      	bge.n	8000db6 <_printf_i+0xd2>
 8000dae:	232d      	movs	r3, #45	; 0x2d
 8000db0:	4276      	negs	r6, r6
 8000db2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000db6:	485a      	ldr	r0, [pc, #360]	; (8000f20 <_printf_i+0x23c>)
 8000db8:	230a      	movs	r3, #10
 8000dba:	e012      	b.n	8000de2 <_printf_i+0xfe>
 8000dbc:	682b      	ldr	r3, [r5, #0]
 8000dbe:	6820      	ldr	r0, [r4, #0]
 8000dc0:	1d19      	adds	r1, r3, #4
 8000dc2:	6029      	str	r1, [r5, #0]
 8000dc4:	0605      	lsls	r5, r0, #24
 8000dc6:	d501      	bpl.n	8000dcc <_printf_i+0xe8>
 8000dc8:	681e      	ldr	r6, [r3, #0]
 8000dca:	e002      	b.n	8000dd2 <_printf_i+0xee>
 8000dcc:	0641      	lsls	r1, r0, #25
 8000dce:	d5fb      	bpl.n	8000dc8 <_printf_i+0xe4>
 8000dd0:	881e      	ldrh	r6, [r3, #0]
 8000dd2:	4853      	ldr	r0, [pc, #332]	; (8000f20 <_printf_i+0x23c>)
 8000dd4:	2f6f      	cmp	r7, #111	; 0x6f
 8000dd6:	bf0c      	ite	eq
 8000dd8:	2308      	moveq	r3, #8
 8000dda:	230a      	movne	r3, #10
 8000ddc:	2100      	movs	r1, #0
 8000dde:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000de2:	6865      	ldr	r5, [r4, #4]
 8000de4:	60a5      	str	r5, [r4, #8]
 8000de6:	2d00      	cmp	r5, #0
 8000de8:	bfa2      	ittt	ge
 8000dea:	6821      	ldrge	r1, [r4, #0]
 8000dec:	f021 0104 	bicge.w	r1, r1, #4
 8000df0:	6021      	strge	r1, [r4, #0]
 8000df2:	b90e      	cbnz	r6, 8000df8 <_printf_i+0x114>
 8000df4:	2d00      	cmp	r5, #0
 8000df6:	d04b      	beq.n	8000e90 <_printf_i+0x1ac>
 8000df8:	4615      	mov	r5, r2
 8000dfa:	fbb6 f1f3 	udiv	r1, r6, r3
 8000dfe:	fb03 6711 	mls	r7, r3, r1, r6
 8000e02:	5dc7      	ldrb	r7, [r0, r7]
 8000e04:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e08:	4637      	mov	r7, r6
 8000e0a:	42bb      	cmp	r3, r7
 8000e0c:	460e      	mov	r6, r1
 8000e0e:	d9f4      	bls.n	8000dfa <_printf_i+0x116>
 8000e10:	2b08      	cmp	r3, #8
 8000e12:	d10b      	bne.n	8000e2c <_printf_i+0x148>
 8000e14:	6823      	ldr	r3, [r4, #0]
 8000e16:	07de      	lsls	r6, r3, #31
 8000e18:	d508      	bpl.n	8000e2c <_printf_i+0x148>
 8000e1a:	6923      	ldr	r3, [r4, #16]
 8000e1c:	6861      	ldr	r1, [r4, #4]
 8000e1e:	4299      	cmp	r1, r3
 8000e20:	bfde      	ittt	le
 8000e22:	2330      	movle	r3, #48	; 0x30
 8000e24:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000e28:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000e2c:	1b52      	subs	r2, r2, r5
 8000e2e:	6122      	str	r2, [r4, #16]
 8000e30:	f8cd a000 	str.w	sl, [sp]
 8000e34:	464b      	mov	r3, r9
 8000e36:	aa03      	add	r2, sp, #12
 8000e38:	4621      	mov	r1, r4
 8000e3a:	4640      	mov	r0, r8
 8000e3c:	f7ff fee4 	bl	8000c08 <_printf_common>
 8000e40:	3001      	adds	r0, #1
 8000e42:	d14a      	bne.n	8000eda <_printf_i+0x1f6>
 8000e44:	f04f 30ff 	mov.w	r0, #4294967295
 8000e48:	b004      	add	sp, #16
 8000e4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e4e:	6823      	ldr	r3, [r4, #0]
 8000e50:	f043 0320 	orr.w	r3, r3, #32
 8000e54:	6023      	str	r3, [r4, #0]
 8000e56:	4833      	ldr	r0, [pc, #204]	; (8000f24 <_printf_i+0x240>)
 8000e58:	2778      	movs	r7, #120	; 0x78
 8000e5a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000e5e:	6823      	ldr	r3, [r4, #0]
 8000e60:	6829      	ldr	r1, [r5, #0]
 8000e62:	061f      	lsls	r7, r3, #24
 8000e64:	f851 6b04 	ldr.w	r6, [r1], #4
 8000e68:	d402      	bmi.n	8000e70 <_printf_i+0x18c>
 8000e6a:	065f      	lsls	r7, r3, #25
 8000e6c:	bf48      	it	mi
 8000e6e:	b2b6      	uxthmi	r6, r6
 8000e70:	07df      	lsls	r7, r3, #31
 8000e72:	bf48      	it	mi
 8000e74:	f043 0320 	orrmi.w	r3, r3, #32
 8000e78:	6029      	str	r1, [r5, #0]
 8000e7a:	bf48      	it	mi
 8000e7c:	6023      	strmi	r3, [r4, #0]
 8000e7e:	b91e      	cbnz	r6, 8000e88 <_printf_i+0x1a4>
 8000e80:	6823      	ldr	r3, [r4, #0]
 8000e82:	f023 0320 	bic.w	r3, r3, #32
 8000e86:	6023      	str	r3, [r4, #0]
 8000e88:	2310      	movs	r3, #16
 8000e8a:	e7a7      	b.n	8000ddc <_printf_i+0xf8>
 8000e8c:	4824      	ldr	r0, [pc, #144]	; (8000f20 <_printf_i+0x23c>)
 8000e8e:	e7e4      	b.n	8000e5a <_printf_i+0x176>
 8000e90:	4615      	mov	r5, r2
 8000e92:	e7bd      	b.n	8000e10 <_printf_i+0x12c>
 8000e94:	682b      	ldr	r3, [r5, #0]
 8000e96:	6826      	ldr	r6, [r4, #0]
 8000e98:	6961      	ldr	r1, [r4, #20]
 8000e9a:	1d18      	adds	r0, r3, #4
 8000e9c:	6028      	str	r0, [r5, #0]
 8000e9e:	0635      	lsls	r5, r6, #24
 8000ea0:	681b      	ldr	r3, [r3, #0]
 8000ea2:	d501      	bpl.n	8000ea8 <_printf_i+0x1c4>
 8000ea4:	6019      	str	r1, [r3, #0]
 8000ea6:	e002      	b.n	8000eae <_printf_i+0x1ca>
 8000ea8:	0670      	lsls	r0, r6, #25
 8000eaa:	d5fb      	bpl.n	8000ea4 <_printf_i+0x1c0>
 8000eac:	8019      	strh	r1, [r3, #0]
 8000eae:	2300      	movs	r3, #0
 8000eb0:	6123      	str	r3, [r4, #16]
 8000eb2:	4615      	mov	r5, r2
 8000eb4:	e7bc      	b.n	8000e30 <_printf_i+0x14c>
 8000eb6:	682b      	ldr	r3, [r5, #0]
 8000eb8:	1d1a      	adds	r2, r3, #4
 8000eba:	602a      	str	r2, [r5, #0]
 8000ebc:	681d      	ldr	r5, [r3, #0]
 8000ebe:	6862      	ldr	r2, [r4, #4]
 8000ec0:	2100      	movs	r1, #0
 8000ec2:	4628      	mov	r0, r5
 8000ec4:	f7ff f98c 	bl	80001e0 <memchr>
 8000ec8:	b108      	cbz	r0, 8000ece <_printf_i+0x1ea>
 8000eca:	1b40      	subs	r0, r0, r5
 8000ecc:	6060      	str	r0, [r4, #4]
 8000ece:	6863      	ldr	r3, [r4, #4]
 8000ed0:	6123      	str	r3, [r4, #16]
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000ed8:	e7aa      	b.n	8000e30 <_printf_i+0x14c>
 8000eda:	6923      	ldr	r3, [r4, #16]
 8000edc:	462a      	mov	r2, r5
 8000ede:	4649      	mov	r1, r9
 8000ee0:	4640      	mov	r0, r8
 8000ee2:	47d0      	blx	sl
 8000ee4:	3001      	adds	r0, #1
 8000ee6:	d0ad      	beq.n	8000e44 <_printf_i+0x160>
 8000ee8:	6823      	ldr	r3, [r4, #0]
 8000eea:	079b      	lsls	r3, r3, #30
 8000eec:	d413      	bmi.n	8000f16 <_printf_i+0x232>
 8000eee:	68e0      	ldr	r0, [r4, #12]
 8000ef0:	9b03      	ldr	r3, [sp, #12]
 8000ef2:	4298      	cmp	r0, r3
 8000ef4:	bfb8      	it	lt
 8000ef6:	4618      	movlt	r0, r3
 8000ef8:	e7a6      	b.n	8000e48 <_printf_i+0x164>
 8000efa:	2301      	movs	r3, #1
 8000efc:	4632      	mov	r2, r6
 8000efe:	4649      	mov	r1, r9
 8000f00:	4640      	mov	r0, r8
 8000f02:	47d0      	blx	sl
 8000f04:	3001      	adds	r0, #1
 8000f06:	d09d      	beq.n	8000e44 <_printf_i+0x160>
 8000f08:	3501      	adds	r5, #1
 8000f0a:	68e3      	ldr	r3, [r4, #12]
 8000f0c:	9903      	ldr	r1, [sp, #12]
 8000f0e:	1a5b      	subs	r3, r3, r1
 8000f10:	42ab      	cmp	r3, r5
 8000f12:	dcf2      	bgt.n	8000efa <_printf_i+0x216>
 8000f14:	e7eb      	b.n	8000eee <_printf_i+0x20a>
 8000f16:	2500      	movs	r5, #0
 8000f18:	f104 0619 	add.w	r6, r4, #25
 8000f1c:	e7f5      	b.n	8000f0a <_printf_i+0x226>
 8000f1e:	bf00      	nop
 8000f20:	08001305 	.word	0x08001305
 8000f24:	08001316 	.word	0x08001316

08000f28 <__sflush_r>:
 8000f28:	898a      	ldrh	r2, [r1, #12]
 8000f2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f2e:	4605      	mov	r5, r0
 8000f30:	0710      	lsls	r0, r2, #28
 8000f32:	460c      	mov	r4, r1
 8000f34:	d458      	bmi.n	8000fe8 <__sflush_r+0xc0>
 8000f36:	684b      	ldr	r3, [r1, #4]
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	dc05      	bgt.n	8000f48 <__sflush_r+0x20>
 8000f3c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000f3e:	2b00      	cmp	r3, #0
 8000f40:	dc02      	bgt.n	8000f48 <__sflush_r+0x20>
 8000f42:	2000      	movs	r0, #0
 8000f44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000f48:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f4a:	2e00      	cmp	r6, #0
 8000f4c:	d0f9      	beq.n	8000f42 <__sflush_r+0x1a>
 8000f4e:	2300      	movs	r3, #0
 8000f50:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000f54:	682f      	ldr	r7, [r5, #0]
 8000f56:	6a21      	ldr	r1, [r4, #32]
 8000f58:	602b      	str	r3, [r5, #0]
 8000f5a:	d032      	beq.n	8000fc2 <__sflush_r+0x9a>
 8000f5c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000f5e:	89a3      	ldrh	r3, [r4, #12]
 8000f60:	075a      	lsls	r2, r3, #29
 8000f62:	d505      	bpl.n	8000f70 <__sflush_r+0x48>
 8000f64:	6863      	ldr	r3, [r4, #4]
 8000f66:	1ac0      	subs	r0, r0, r3
 8000f68:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000f6a:	b10b      	cbz	r3, 8000f70 <__sflush_r+0x48>
 8000f6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000f6e:	1ac0      	subs	r0, r0, r3
 8000f70:	2300      	movs	r3, #0
 8000f72:	4602      	mov	r2, r0
 8000f74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000f76:	6a21      	ldr	r1, [r4, #32]
 8000f78:	4628      	mov	r0, r5
 8000f7a:	47b0      	blx	r6
 8000f7c:	1c43      	adds	r3, r0, #1
 8000f7e:	89a3      	ldrh	r3, [r4, #12]
 8000f80:	d106      	bne.n	8000f90 <__sflush_r+0x68>
 8000f82:	6829      	ldr	r1, [r5, #0]
 8000f84:	291d      	cmp	r1, #29
 8000f86:	d82b      	bhi.n	8000fe0 <__sflush_r+0xb8>
 8000f88:	4a29      	ldr	r2, [pc, #164]	; (8001030 <__sflush_r+0x108>)
 8000f8a:	410a      	asrs	r2, r1
 8000f8c:	07d6      	lsls	r6, r2, #31
 8000f8e:	d427      	bmi.n	8000fe0 <__sflush_r+0xb8>
 8000f90:	2200      	movs	r2, #0
 8000f92:	6062      	str	r2, [r4, #4]
 8000f94:	04d9      	lsls	r1, r3, #19
 8000f96:	6922      	ldr	r2, [r4, #16]
 8000f98:	6022      	str	r2, [r4, #0]
 8000f9a:	d504      	bpl.n	8000fa6 <__sflush_r+0x7e>
 8000f9c:	1c42      	adds	r2, r0, #1
 8000f9e:	d101      	bne.n	8000fa4 <__sflush_r+0x7c>
 8000fa0:	682b      	ldr	r3, [r5, #0]
 8000fa2:	b903      	cbnz	r3, 8000fa6 <__sflush_r+0x7e>
 8000fa4:	6560      	str	r0, [r4, #84]	; 0x54
 8000fa6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000fa8:	602f      	str	r7, [r5, #0]
 8000faa:	2900      	cmp	r1, #0
 8000fac:	d0c9      	beq.n	8000f42 <__sflush_r+0x1a>
 8000fae:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000fb2:	4299      	cmp	r1, r3
 8000fb4:	d002      	beq.n	8000fbc <__sflush_r+0x94>
 8000fb6:	4628      	mov	r0, r5
 8000fb8:	f7ff fbea 	bl	8000790 <_free_r>
 8000fbc:	2000      	movs	r0, #0
 8000fbe:	6360      	str	r0, [r4, #52]	; 0x34
 8000fc0:	e7c0      	b.n	8000f44 <__sflush_r+0x1c>
 8000fc2:	2301      	movs	r3, #1
 8000fc4:	4628      	mov	r0, r5
 8000fc6:	47b0      	blx	r6
 8000fc8:	1c41      	adds	r1, r0, #1
 8000fca:	d1c8      	bne.n	8000f5e <__sflush_r+0x36>
 8000fcc:	682b      	ldr	r3, [r5, #0]
 8000fce:	2b00      	cmp	r3, #0
 8000fd0:	d0c5      	beq.n	8000f5e <__sflush_r+0x36>
 8000fd2:	2b1d      	cmp	r3, #29
 8000fd4:	d001      	beq.n	8000fda <__sflush_r+0xb2>
 8000fd6:	2b16      	cmp	r3, #22
 8000fd8:	d101      	bne.n	8000fde <__sflush_r+0xb6>
 8000fda:	602f      	str	r7, [r5, #0]
 8000fdc:	e7b1      	b.n	8000f42 <__sflush_r+0x1a>
 8000fde:	89a3      	ldrh	r3, [r4, #12]
 8000fe0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000fe4:	81a3      	strh	r3, [r4, #12]
 8000fe6:	e7ad      	b.n	8000f44 <__sflush_r+0x1c>
 8000fe8:	690f      	ldr	r7, [r1, #16]
 8000fea:	2f00      	cmp	r7, #0
 8000fec:	d0a9      	beq.n	8000f42 <__sflush_r+0x1a>
 8000fee:	0793      	lsls	r3, r2, #30
 8000ff0:	680e      	ldr	r6, [r1, #0]
 8000ff2:	bf08      	it	eq
 8000ff4:	694b      	ldreq	r3, [r1, #20]
 8000ff6:	600f      	str	r7, [r1, #0]
 8000ff8:	bf18      	it	ne
 8000ffa:	2300      	movne	r3, #0
 8000ffc:	eba6 0807 	sub.w	r8, r6, r7
 8001000:	608b      	str	r3, [r1, #8]
 8001002:	f1b8 0f00 	cmp.w	r8, #0
 8001006:	dd9c      	ble.n	8000f42 <__sflush_r+0x1a>
 8001008:	6a21      	ldr	r1, [r4, #32]
 800100a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800100c:	4643      	mov	r3, r8
 800100e:	463a      	mov	r2, r7
 8001010:	4628      	mov	r0, r5
 8001012:	47b0      	blx	r6
 8001014:	2800      	cmp	r0, #0
 8001016:	dc06      	bgt.n	8001026 <__sflush_r+0xfe>
 8001018:	89a3      	ldrh	r3, [r4, #12]
 800101a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800101e:	81a3      	strh	r3, [r4, #12]
 8001020:	f04f 30ff 	mov.w	r0, #4294967295
 8001024:	e78e      	b.n	8000f44 <__sflush_r+0x1c>
 8001026:	4407      	add	r7, r0
 8001028:	eba8 0800 	sub.w	r8, r8, r0
 800102c:	e7e9      	b.n	8001002 <__sflush_r+0xda>
 800102e:	bf00      	nop
 8001030:	dfbffffe 	.word	0xdfbffffe

08001034 <_fflush_r>:
 8001034:	b538      	push	{r3, r4, r5, lr}
 8001036:	690b      	ldr	r3, [r1, #16]
 8001038:	4605      	mov	r5, r0
 800103a:	460c      	mov	r4, r1
 800103c:	b913      	cbnz	r3, 8001044 <_fflush_r+0x10>
 800103e:	2500      	movs	r5, #0
 8001040:	4628      	mov	r0, r5
 8001042:	bd38      	pop	{r3, r4, r5, pc}
 8001044:	b118      	cbz	r0, 800104e <_fflush_r+0x1a>
 8001046:	6a03      	ldr	r3, [r0, #32]
 8001048:	b90b      	cbnz	r3, 800104e <_fflush_r+0x1a>
 800104a:	f7ff fa9b 	bl	8000584 <__sinit>
 800104e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001052:	2b00      	cmp	r3, #0
 8001054:	d0f3      	beq.n	800103e <_fflush_r+0xa>
 8001056:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001058:	07d0      	lsls	r0, r2, #31
 800105a:	d404      	bmi.n	8001066 <_fflush_r+0x32>
 800105c:	0599      	lsls	r1, r3, #22
 800105e:	d402      	bmi.n	8001066 <_fflush_r+0x32>
 8001060:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001062:	f7ff fb93 	bl	800078c <__retarget_lock_acquire_recursive>
 8001066:	4628      	mov	r0, r5
 8001068:	4621      	mov	r1, r4
 800106a:	f7ff ff5d 	bl	8000f28 <__sflush_r>
 800106e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001070:	07da      	lsls	r2, r3, #31
 8001072:	4605      	mov	r5, r0
 8001074:	d4e4      	bmi.n	8001040 <_fflush_r+0xc>
 8001076:	89a3      	ldrh	r3, [r4, #12]
 8001078:	059b      	lsls	r3, r3, #22
 800107a:	d4e1      	bmi.n	8001040 <_fflush_r+0xc>
 800107c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800107e:	f7ff fb86 	bl	800078e <__retarget_lock_release_recursive>
 8001082:	e7dd      	b.n	8001040 <_fflush_r+0xc>

08001084 <__swbuf_r>:
 8001084:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001086:	460e      	mov	r6, r1
 8001088:	4614      	mov	r4, r2
 800108a:	4605      	mov	r5, r0
 800108c:	b118      	cbz	r0, 8001096 <__swbuf_r+0x12>
 800108e:	6a03      	ldr	r3, [r0, #32]
 8001090:	b90b      	cbnz	r3, 8001096 <__swbuf_r+0x12>
 8001092:	f7ff fa77 	bl	8000584 <__sinit>
 8001096:	69a3      	ldr	r3, [r4, #24]
 8001098:	60a3      	str	r3, [r4, #8]
 800109a:	89a3      	ldrh	r3, [r4, #12]
 800109c:	071a      	lsls	r2, r3, #28
 800109e:	d525      	bpl.n	80010ec <__swbuf_r+0x68>
 80010a0:	6923      	ldr	r3, [r4, #16]
 80010a2:	b31b      	cbz	r3, 80010ec <__swbuf_r+0x68>
 80010a4:	6823      	ldr	r3, [r4, #0]
 80010a6:	6922      	ldr	r2, [r4, #16]
 80010a8:	1a98      	subs	r0, r3, r2
 80010aa:	6963      	ldr	r3, [r4, #20]
 80010ac:	b2f6      	uxtb	r6, r6
 80010ae:	4283      	cmp	r3, r0
 80010b0:	4637      	mov	r7, r6
 80010b2:	dc04      	bgt.n	80010be <__swbuf_r+0x3a>
 80010b4:	4621      	mov	r1, r4
 80010b6:	4628      	mov	r0, r5
 80010b8:	f7ff ffbc 	bl	8001034 <_fflush_r>
 80010bc:	b9e0      	cbnz	r0, 80010f8 <__swbuf_r+0x74>
 80010be:	68a3      	ldr	r3, [r4, #8]
 80010c0:	3b01      	subs	r3, #1
 80010c2:	60a3      	str	r3, [r4, #8]
 80010c4:	6823      	ldr	r3, [r4, #0]
 80010c6:	1c5a      	adds	r2, r3, #1
 80010c8:	6022      	str	r2, [r4, #0]
 80010ca:	701e      	strb	r6, [r3, #0]
 80010cc:	6962      	ldr	r2, [r4, #20]
 80010ce:	1c43      	adds	r3, r0, #1
 80010d0:	429a      	cmp	r2, r3
 80010d2:	d004      	beq.n	80010de <__swbuf_r+0x5a>
 80010d4:	89a3      	ldrh	r3, [r4, #12]
 80010d6:	07db      	lsls	r3, r3, #31
 80010d8:	d506      	bpl.n	80010e8 <__swbuf_r+0x64>
 80010da:	2e0a      	cmp	r6, #10
 80010dc:	d104      	bne.n	80010e8 <__swbuf_r+0x64>
 80010de:	4621      	mov	r1, r4
 80010e0:	4628      	mov	r0, r5
 80010e2:	f7ff ffa7 	bl	8001034 <_fflush_r>
 80010e6:	b938      	cbnz	r0, 80010f8 <__swbuf_r+0x74>
 80010e8:	4638      	mov	r0, r7
 80010ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010ec:	4621      	mov	r1, r4
 80010ee:	4628      	mov	r0, r5
 80010f0:	f000 f806 	bl	8001100 <__swsetup_r>
 80010f4:	2800      	cmp	r0, #0
 80010f6:	d0d5      	beq.n	80010a4 <__swbuf_r+0x20>
 80010f8:	f04f 37ff 	mov.w	r7, #4294967295
 80010fc:	e7f4      	b.n	80010e8 <__swbuf_r+0x64>
	...

08001100 <__swsetup_r>:
 8001100:	b538      	push	{r3, r4, r5, lr}
 8001102:	4b2a      	ldr	r3, [pc, #168]	; (80011ac <__swsetup_r+0xac>)
 8001104:	4605      	mov	r5, r0
 8001106:	6818      	ldr	r0, [r3, #0]
 8001108:	460c      	mov	r4, r1
 800110a:	b118      	cbz	r0, 8001114 <__swsetup_r+0x14>
 800110c:	6a03      	ldr	r3, [r0, #32]
 800110e:	b90b      	cbnz	r3, 8001114 <__swsetup_r+0x14>
 8001110:	f7ff fa38 	bl	8000584 <__sinit>
 8001114:	89a3      	ldrh	r3, [r4, #12]
 8001116:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800111a:	0718      	lsls	r0, r3, #28
 800111c:	d422      	bmi.n	8001164 <__swsetup_r+0x64>
 800111e:	06d9      	lsls	r1, r3, #27
 8001120:	d407      	bmi.n	8001132 <__swsetup_r+0x32>
 8001122:	2309      	movs	r3, #9
 8001124:	602b      	str	r3, [r5, #0]
 8001126:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800112a:	81a3      	strh	r3, [r4, #12]
 800112c:	f04f 30ff 	mov.w	r0, #4294967295
 8001130:	e034      	b.n	800119c <__swsetup_r+0x9c>
 8001132:	0758      	lsls	r0, r3, #29
 8001134:	d512      	bpl.n	800115c <__swsetup_r+0x5c>
 8001136:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001138:	b141      	cbz	r1, 800114c <__swsetup_r+0x4c>
 800113a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800113e:	4299      	cmp	r1, r3
 8001140:	d002      	beq.n	8001148 <__swsetup_r+0x48>
 8001142:	4628      	mov	r0, r5
 8001144:	f7ff fb24 	bl	8000790 <_free_r>
 8001148:	2300      	movs	r3, #0
 800114a:	6363      	str	r3, [r4, #52]	; 0x34
 800114c:	89a3      	ldrh	r3, [r4, #12]
 800114e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001152:	81a3      	strh	r3, [r4, #12]
 8001154:	2300      	movs	r3, #0
 8001156:	6063      	str	r3, [r4, #4]
 8001158:	6923      	ldr	r3, [r4, #16]
 800115a:	6023      	str	r3, [r4, #0]
 800115c:	89a3      	ldrh	r3, [r4, #12]
 800115e:	f043 0308 	orr.w	r3, r3, #8
 8001162:	81a3      	strh	r3, [r4, #12]
 8001164:	6923      	ldr	r3, [r4, #16]
 8001166:	b94b      	cbnz	r3, 800117c <__swsetup_r+0x7c>
 8001168:	89a3      	ldrh	r3, [r4, #12]
 800116a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800116e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001172:	d003      	beq.n	800117c <__swsetup_r+0x7c>
 8001174:	4621      	mov	r1, r4
 8001176:	4628      	mov	r0, r5
 8001178:	f000 f850 	bl	800121c <__smakebuf_r>
 800117c:	89a0      	ldrh	r0, [r4, #12]
 800117e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001182:	f010 0301 	ands.w	r3, r0, #1
 8001186:	d00a      	beq.n	800119e <__swsetup_r+0x9e>
 8001188:	2300      	movs	r3, #0
 800118a:	60a3      	str	r3, [r4, #8]
 800118c:	6963      	ldr	r3, [r4, #20]
 800118e:	425b      	negs	r3, r3
 8001190:	61a3      	str	r3, [r4, #24]
 8001192:	6923      	ldr	r3, [r4, #16]
 8001194:	b943      	cbnz	r3, 80011a8 <__swsetup_r+0xa8>
 8001196:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800119a:	d1c4      	bne.n	8001126 <__swsetup_r+0x26>
 800119c:	bd38      	pop	{r3, r4, r5, pc}
 800119e:	0781      	lsls	r1, r0, #30
 80011a0:	bf58      	it	pl
 80011a2:	6963      	ldrpl	r3, [r4, #20]
 80011a4:	60a3      	str	r3, [r4, #8]
 80011a6:	e7f4      	b.n	8001192 <__swsetup_r+0x92>
 80011a8:	2000      	movs	r0, #0
 80011aa:	e7f7      	b.n	800119c <__swsetup_r+0x9c>
 80011ac:	20000058 	.word	0x20000058

080011b0 <_sbrk_r>:
 80011b0:	b538      	push	{r3, r4, r5, lr}
 80011b2:	4d06      	ldr	r5, [pc, #24]	; (80011cc <_sbrk_r+0x1c>)
 80011b4:	2300      	movs	r3, #0
 80011b6:	4604      	mov	r4, r0
 80011b8:	4608      	mov	r0, r1
 80011ba:	602b      	str	r3, [r5, #0]
 80011bc:	f7ff f908 	bl	80003d0 <_sbrk>
 80011c0:	1c43      	adds	r3, r0, #1
 80011c2:	d102      	bne.n	80011ca <_sbrk_r+0x1a>
 80011c4:	682b      	ldr	r3, [r5, #0]
 80011c6:	b103      	cbz	r3, 80011ca <_sbrk_r+0x1a>
 80011c8:	6023      	str	r3, [r4, #0]
 80011ca:	bd38      	pop	{r3, r4, r5, pc}
 80011cc:	200001b8 	.word	0x200001b8

080011d0 <__swhatbuf_r>:
 80011d0:	b570      	push	{r4, r5, r6, lr}
 80011d2:	460c      	mov	r4, r1
 80011d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80011d8:	2900      	cmp	r1, #0
 80011da:	b096      	sub	sp, #88	; 0x58
 80011dc:	4615      	mov	r5, r2
 80011de:	461e      	mov	r6, r3
 80011e0:	da0d      	bge.n	80011fe <__swhatbuf_r+0x2e>
 80011e2:	89a3      	ldrh	r3, [r4, #12]
 80011e4:	f013 0f80 	tst.w	r3, #128	; 0x80
 80011e8:	f04f 0100 	mov.w	r1, #0
 80011ec:	bf0c      	ite	eq
 80011ee:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80011f2:	2340      	movne	r3, #64	; 0x40
 80011f4:	2000      	movs	r0, #0
 80011f6:	6031      	str	r1, [r6, #0]
 80011f8:	602b      	str	r3, [r5, #0]
 80011fa:	b016      	add	sp, #88	; 0x58
 80011fc:	bd70      	pop	{r4, r5, r6, pc}
 80011fe:	466a      	mov	r2, sp
 8001200:	f000 f848 	bl	8001294 <_fstat_r>
 8001204:	2800      	cmp	r0, #0
 8001206:	dbec      	blt.n	80011e2 <__swhatbuf_r+0x12>
 8001208:	9901      	ldr	r1, [sp, #4]
 800120a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800120e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8001212:	4259      	negs	r1, r3
 8001214:	4159      	adcs	r1, r3
 8001216:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800121a:	e7eb      	b.n	80011f4 <__swhatbuf_r+0x24>

0800121c <__smakebuf_r>:
 800121c:	898b      	ldrh	r3, [r1, #12]
 800121e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001220:	079d      	lsls	r5, r3, #30
 8001222:	4606      	mov	r6, r0
 8001224:	460c      	mov	r4, r1
 8001226:	d507      	bpl.n	8001238 <__smakebuf_r+0x1c>
 8001228:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800122c:	6023      	str	r3, [r4, #0]
 800122e:	6123      	str	r3, [r4, #16]
 8001230:	2301      	movs	r3, #1
 8001232:	6163      	str	r3, [r4, #20]
 8001234:	b002      	add	sp, #8
 8001236:	bd70      	pop	{r4, r5, r6, pc}
 8001238:	ab01      	add	r3, sp, #4
 800123a:	466a      	mov	r2, sp
 800123c:	f7ff ffc8 	bl	80011d0 <__swhatbuf_r>
 8001240:	9900      	ldr	r1, [sp, #0]
 8001242:	4605      	mov	r5, r0
 8001244:	4630      	mov	r0, r6
 8001246:	f7ff fb0f 	bl	8000868 <_malloc_r>
 800124a:	b948      	cbnz	r0, 8001260 <__smakebuf_r+0x44>
 800124c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001250:	059a      	lsls	r2, r3, #22
 8001252:	d4ef      	bmi.n	8001234 <__smakebuf_r+0x18>
 8001254:	f023 0303 	bic.w	r3, r3, #3
 8001258:	f043 0302 	orr.w	r3, r3, #2
 800125c:	81a3      	strh	r3, [r4, #12]
 800125e:	e7e3      	b.n	8001228 <__smakebuf_r+0xc>
 8001260:	89a3      	ldrh	r3, [r4, #12]
 8001262:	6020      	str	r0, [r4, #0]
 8001264:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001268:	81a3      	strh	r3, [r4, #12]
 800126a:	9b00      	ldr	r3, [sp, #0]
 800126c:	6163      	str	r3, [r4, #20]
 800126e:	9b01      	ldr	r3, [sp, #4]
 8001270:	6120      	str	r0, [r4, #16]
 8001272:	b15b      	cbz	r3, 800128c <__smakebuf_r+0x70>
 8001274:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001278:	4630      	mov	r0, r6
 800127a:	f000 f81d 	bl	80012b8 <_isatty_r>
 800127e:	b128      	cbz	r0, 800128c <__smakebuf_r+0x70>
 8001280:	89a3      	ldrh	r3, [r4, #12]
 8001282:	f023 0303 	bic.w	r3, r3, #3
 8001286:	f043 0301 	orr.w	r3, r3, #1
 800128a:	81a3      	strh	r3, [r4, #12]
 800128c:	89a3      	ldrh	r3, [r4, #12]
 800128e:	431d      	orrs	r5, r3
 8001290:	81a5      	strh	r5, [r4, #12]
 8001292:	e7cf      	b.n	8001234 <__smakebuf_r+0x18>

08001294 <_fstat_r>:
 8001294:	b538      	push	{r3, r4, r5, lr}
 8001296:	4d07      	ldr	r5, [pc, #28]	; (80012b4 <_fstat_r+0x20>)
 8001298:	2300      	movs	r3, #0
 800129a:	4604      	mov	r4, r0
 800129c:	4608      	mov	r0, r1
 800129e:	4611      	mov	r1, r2
 80012a0:	602b      	str	r3, [r5, #0]
 80012a2:	f7ff f86c 	bl	800037e <_fstat>
 80012a6:	1c43      	adds	r3, r0, #1
 80012a8:	d102      	bne.n	80012b0 <_fstat_r+0x1c>
 80012aa:	682b      	ldr	r3, [r5, #0]
 80012ac:	b103      	cbz	r3, 80012b0 <_fstat_r+0x1c>
 80012ae:	6023      	str	r3, [r4, #0]
 80012b0:	bd38      	pop	{r3, r4, r5, pc}
 80012b2:	bf00      	nop
 80012b4:	200001b8 	.word	0x200001b8

080012b8 <_isatty_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	4d06      	ldr	r5, [pc, #24]	; (80012d4 <_isatty_r+0x1c>)
 80012bc:	2300      	movs	r3, #0
 80012be:	4604      	mov	r4, r0
 80012c0:	4608      	mov	r0, r1
 80012c2:	602b      	str	r3, [r5, #0]
 80012c4:	f7ff f86b 	bl	800039e <_isatty>
 80012c8:	1c43      	adds	r3, r0, #1
 80012ca:	d102      	bne.n	80012d2 <_isatty_r+0x1a>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	b103      	cbz	r3, 80012d2 <_isatty_r+0x1a>
 80012d0:	6023      	str	r3, [r4, #0]
 80012d2:	bd38      	pop	{r3, r4, r5, pc}
 80012d4:	200001b8 	.word	0x200001b8

080012d8 <_init>:
 80012d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012da:	bf00      	nop
 80012dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012de:	bc08      	pop	{r3}
 80012e0:	469e      	mov	lr, r3
 80012e2:	4770      	bx	lr

080012e4 <_fini>:
 80012e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80012e6:	bf00      	nop
 80012e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80012ea:	bc08      	pop	{r3}
 80012ec:	469e      	mov	lr, r3
 80012ee:	4770      	bx	lr
